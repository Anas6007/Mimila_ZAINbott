import telebot
import random
import string
import base64
from datetime import datetime
from datetime import datetime, timedelta 
import time
import threading
import qrcode
from io import BytesIO
import shutil
import os
import random
import difflib
from telebot import TeleBot, types
from collections import defaultdict
import requests
import json
import random
import re
import telebot
import os
import threading
from faker import Faker
import logging


bot_name = 'ميميلا 🎀💎'  ### اسم بوتك هنا
TOKEN = "7927707129:AAEqPYmdZAtkTfqr19l82H9ousRWLWU-Vw8'' ## توكنك هنا



bot = telebot.TeleBot(TOKEN)
current_questions = {}
chat_locked = False  
user_points = {}
current_sentences = {}
start_times = {}
game_active = {}
current_words = {}
restricted_users = set()
nicknames = {}
reports = []
error_sent = {} 
user_requests = {}
ring_position = {}  
game_level = {}   
user_points = defaultdict(int)
current_sentences = {}
current_words = {}
current_questions = {}
ring_position = {}
start_times = {}
user_luck_time = {} 
user_accounts = {}
user_jobs = {}
user_salaries = {}
user_salary_time = {}
user_group_chat_id = {}
user_names = {}
user_tip_time = {}  
user_luck_time = {} 
responses = {}
user_to_promote = None
welcome_messages = {}
user_message_count = {}
spam_protection_active = False
offensive_language_protection_active = False
muted_users = set() 
spam_protection_active = False
offensive_language_protection_active = False
muted_users = set()
user_message_count = {}



#### حط هنا اسم بوتك بين علامات التنصيص
bot_name = 'ميميلا 🎀💎'
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    
    button_commands = types.InlineKeyboardButton("الأوامر", callback_data="commands")
    button_channel = types.InlineKeyboardButton("قناة المطور", url="https://t.me/CR7_YEE")
    add_to_group_button = telebot.types.InlineKeyboardButton(text='اضافة الي مجموعتي', url='https://t.me/Mimila_ZAINbot?startgroup')

    markup.add(button_commands)
    markup.add(button_channel, add_to_group_button)

    bot.reply_to(message,
                 f'ياهلااا! 👋🌸 ميميلا هنا تحمي قروبك وتخليه مرتب وأنيق! 💖🚀
ما في إزعاج، ما في متطفلين، بس وناسة وأمان! 🎉😌

🔰 وش أسوي؟
🔹 فلترة السبام 🚫🗑️
🔹 منع الروابط الغريبة ❌🔗
🔹 طرد المتطفلين 🚷👀
🔹 أوامر تحكم سريعة وسهلة ⚙️',
                 reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "commands")
def handle_commands(call):
    commands_message = (
        f"↢ اهلا بيك انا هشرحلك كل اوامر البوت :\n"
        f"اســمـي : {bot_name}\n\n"
        f"اولا الالـعـاب :\n\n"
        f"قـبـل اي حـاجـه اعـمـل حـسـاب فـي الــبــنــك  مـن خلال ارسـال  انشاء حساب بنكي   ,, "
        f"اخــتــار اي نــوع وســيــتــم انــشــاء حــســاب خــاص بــيــك\n\n"
        f"اكــتــب كــلــمــه راتب   واخـــتــار وظيــفــتــك ⚡️\n"
        f"تــقــدر تــكــب  بقشيش او بخشيش و هــيــنــزلـك شــويه فلوس فــ حـسابــك\n\n"
        f"لعرض فلوسك اكتب فلوسي\n"
        f"عندك لعبه كت 🌟\n\n"
        f"تــقــدر تجــمع فلــوس مـن خلال لعبه   (( جمل او كلمات او تفكيك او انجليزي او احسب او خواتم او حجره ))\n\n"
        f"دي كــلــهــا الـــعــاب 🔹\n\n"
        f"-========================================================-\n\n"
        f"الاوامر  :\n"
        f"عنــدك امر     رابط مجموعه    == >> لــعــرض رابــط الــمجــوعــه\n"
        f"امر   معلومات المجموعه        == >> لــعــرض مــعــلــومات الــمــجــمــوعـه\n"
        f"امر   انشا qr                             == >> لـ صـــنـــع رمــــــز QR \n"
        f"امر  افتاري او صوره                  == >> لــ عرص صورتك\n"
        f"امر عرض صوره                        == >> لـــعــرض صــوره اي مستخدم فـ الجروب\n"
        f"امر تقيد                                    == >> لا يحظر او يكتم فقط يقيد المستخدمين من الرسائل\n"
        f"امر كشف                                  == >> لــــعـــرض مـــعـــلــومـــات الــمــتخدمين\n"
        f"امر ID                                       == >> لــعــرض ال ID الـــخــاص بــيــك\n"
        f"امر معرفي او يوزري                  == >> لــعرض يوزرك\n"
        f"امر بلاغ او ابلاغ                         ==>> لـ ابلاغ مالك الجروب بـ شئ معـين\n"
        f"امر شفر                                     == >> لتشفير الرسائل\n"
        f"امر فك تشفير                          == >> لـ فك تــشفير الرسائل\n"
        f"امر اضافه رد                             == >> لـ اضافه رد\n"
        f"امر حظر                                    == >> لحظر مستخدمين\n"
        f"امر كتم                                      == >> لكتم المستخدمين\n\n"
        f"✓"
    )
    
    bot.send_message(call.message.chat.id, commands_message)





def setup_logging():
    logging.basicConfig(
        level=logging.DEBUG,  
        format='%(asctime)s - %(levelname)s - %(message)s',  
        handlers=[
            logging.FileHandler("bot.log"), 
            logging.StreamHandler()
        ]
    )

    logging.info("Bot has started.")
setup_logging()













@bot.message_handler(func=lambda message: message.reply_to_message and message.text.lower() == 'حظر')
def execute_ban(message):
    chat_id = message.chat.id
    user_id_to_ban = message.reply_to_message.from_user.id
    user_id = message.from_user.id

    if is_group_owner(user_id, chat_id):
        if is_user_admin(user_id_to_ban, chat_id):
            bot.reply_to(message, "⇜ عذراً، لا يمكنني حظر أدمن. يمكنك شيل صلاحياته.")
        else:
            bot.kick_chat_member(chat_id, user_id_to_ban)
            bot.reply_to(message, f"⇜ تم حظر مستخدم {message.reply_to_message.from_user.first_name} 👌🏻")
    elif is_user_admin(user_id, chat_id):
        if is_user_admin(user_id_to_ban, chat_id):
            bot.reply_to(message, "⇜ عذراً، لا يمكنني حظر أدمن. يمكنك شيل صلاحياته.")
        else:
            bot.kick_chat_member(chat_id, user_id_to_ban)
            bot.reply_to(message, f"⇜ تم حظر مستخدم {message.reply_to_message.from_user.first_name} 👌🏻")
    else:
        bot.reply_to(message, f"⇜ عزيزي {message.from_user.first_name} - أنت لست أدمن لا يمكنك حظر.")

def is_group_owner(user_id, chat_id):
    admins = bot.get_chat_administrators(chat_id)
    for admin in admins:
        if admin.user.id == user_id and admin.status == 'creator':
            return True
    return False

def is_user_admin(user_id, chat_id):
    admins = [admin.user.id for admin in bot.get_chat_administrators(chat_id)]
    return user_id in admins




@bot.message_handler(func=lambda message: message.text.lower() == "جمل")
def start_game(message):
    sentence = random.choice(sentences)
    current_sentences[message.from_user.id] = sentence
    start_times[message.from_user.id] = time.time()
    game_active[message.from_user.id] = True

    formatted_sentence = "الجملة ↢ ( " + "'".join(sentence.split()) + " )\n⇜ اكتبها بدون فواصل"
    bot.send_message(message.chat.id, formatted_sentence)

@bot.message_handler(func=lambda m: m.from_user.id in current_sentences and game_active.get(m.from_user.id, False))
def check_answer(answer_message):
    user_id = answer_message.from_user.id
    if user_id in current_sentences:
        sentence = current_sentences[user_id]
        elapsed_time = time.time() - start_times[user_id]
        
        is_correct = answer_message.text.strip() == sentence

        if is_correct:
            user_points[user_id] += 5
            elapsed_time_str = f"{elapsed_time:.2f} ثانية"
            bot.send_message(answer_message.chat.id, f"صح عليك {answer_message.from_user.first_name} ✔️\n⏰ الوقت: {elapsed_time_str}\n💸 فلوسك: {user_points[user_id]} ريال\n༄")
            del current_sentences[user_id]
            del start_times[user_id]
            game_active[user_id] = False
        else:
            bot.send_message(answer_message.chat.id, "ههعهععهه غلط، اللعبة انتهت!")
            del current_sentences[user_id]
            del start_times[user_id]
            game_active[user_id] = False




# بدايه الالعاب

sentences = [
    "الحياة قصيرة استمتع بكل لحظة",
    "التعلم هو مفتاح النجاح",
    "كن إيجابيًا حتى في الأوقات الصعبة",
    "الصبر مفتاح الفرج",
    "كل بداية جديدة تأتي من نهاية بداية أخرى",
    "العمل الجماعي يصنع المعجزات",
    "الصحة ثروة لا تقدر بثمن",
    "ابحث عن الجمال في كل شيء",
    "الأفكار الإيجابية تجذب النتائج الإيجابية",
    "التحديات هي فرص للتطور",
    "كن الشخص الذي تود أن تراه في العالم",
    "العقل السليم في الجسم السليم",
    "نجاحك يعتمد على ثقتك بنفسك",
    "احترام الآخرين هو أساس العلاقات الجيدة",
    "تقبل التغيير فهو جزء من الحياة",
    "التفاؤل هو الإيمان الذي يؤدي إلى الإنجاز",
    "كل يوم هو فرصة جديدة",
    "اجعل من الفشل خطوة نحو النجاح",
    "كن لطيفًا فالجميع يقاتل مع معركة",
    "استمع أكثر مما تتحدث",
    "الأفعال تتحدث بصوت أعلى من الكلمات",
    "ابحث عن المعرفة في كل مكان",
    "التفاصيل الصغيرة تصنع الفرق الكبير",
    "دع الابتسامة تكون عنوانك",
    "كل شيء يبدأ بفكرة",
    "المثابرة تجلب النتائج",
    "التوازن هو سر الحياة السعيدة",
    "كن مرنًا في تفكيرك",
    "الحب هو القوة الأكثر تأثيرًا",
    "التواصل الجيد يبني جسور الثقة",
    "نحن ما نفكر فيه",
    "اقضِ وقتًا مع الأشخاص الذين يرفعونك",
    "الأمل هو الضوء في الظلام",
    "النجاح يتطلب التخطيط",
    "لا تتردد في تجربة أشياء جديدة",
    "استثمر في نفسك فهذا أفضل استثمار",
    "الوقت هو أغلى ما تملك",
    "الحياة مليئة بالفرص اغتنمها",
    "الفشل هو مجرد خطوة نحو النجاح",
    "كن شجاعًا في مواجهة مخاوفك",
    "تعلم من أخطائك",
    "اجعل كل يوم أفضل من سابقه",
    "الفرح في الأشياء البسيطة",
    "العطاء يجلب السعادة",
    "كن نفسك فالعالم يحتاجك",
    "المعرفة قوة",
    "تقبل نفسك كما أنت",
    "اجعل من أحلامك واقعًا",
    "التفكير الإيجابي يغير كل شيء",
    "احرص على بناء علاقات جيدة",
    "الحياة رحلة استمتع بكل لحظة",
    "كن قائدًا لا تابعًا",
    "تعلم شيئًا جديدًا كل يوم",
    "النجاح يأتي مع العمل الجاد",
    "تقبل الأخطاء كجزء من التعلم",
    "ابحث عن الفرح في كل شيء",
    "كن مرنًا في مواجهة التحديات",
    "الحب هو لغة عالمية",
    "التفاؤل يجلب السعادة",
    "التفكير النقدي هو مهارة ضرورية",
    "العزيمة تصنع الفرق",
    "اجعل من كل يوم فرصة جديدة",
    "كن صديقًا للبيئة",
    "ابحث عن السلام الداخلي",
    "العائلة هي أهم شيء في الحياة",
    "التوازن بين العمل والحياة مهم",
    "استمتع بالطبيعة",
    "كن فخورًا بما أنت عليه",
    "العناية بالنفس هي أولوية",
    "تجنب السلبية",
    "كن مبدعًا في حل المشكلات",
    "استمتع باللحظة",
    "التعاون يحقق الأهداف",
    "لا تخف من الفشل",
    "تقبل النقد البناء",
    "اجعل لوقتك قيمة",
    "النظافة من الإيمان",
    "كن قدوة للآخرين",
    "تجنب المقارنات",
    "حقق أهدافك بخطوات صغيرة",
    "الحكمة تأتي من التجربة",
    "كن إيجابيًا في حديثك",
    "تقبل التغيير كجزء من الحياة",
    "اجعل من التحديات فرصًا",
    "لا تتخذ القرارات في لحظة غضب",
    "التوازن النفسي هو مفتاح السعادة",
    "اجعل من التعلم عادة",
    "الحياة مليئة بالألوان استمتع بها",
    "كن لطيفًا مع نفسك",
    "تقدير اللحظات الصغيرة",
    "استمتع بالرحلة وليس فقط بالوجهة"
    "كل يوم هو بداية جديدة.",
    "التعلم هو مفتاح التقدم.",
    "الإيجابية تجلب الإيجابية.",
    "العزيمة تصنع الفارق.",
    "كن متفائلًا حتى في الأوقات الصعبة.",
    "التدريب المستمر يؤدي إلى النجاح.",
    "الصبر هو مفتاح النجاح.",
    "الأفكار العظيمة تبدأ من فكرة بسيطة.",
    "كل تحدٍ هو فرصة للتطوير.",
    "الشغف هو ما يدفعك للأمام.",
    "اجعل كل لحظة تعيشها لها قيمة.",
    "التغيير هو جزء من النمو.",
    "العمل الجاد يحقق الأهداف.",
    "ابحث عن الفرص في كل تحدٍ.",
    "التعاون يحقق النجاحات الكبرى.",
    "كن الشخص الذي يلهم الآخرين.",
    "التفكير الإيجابي يقود إلى نتائج إيجابية.",
    "تقبل الفشل كجزء من النجاح.",
    "اجعل من كل فشل خطوة نحو النجاح.",
    "التوازن في الحياة هو سر السعادة.",
    "الهزيمة ليست نهاية، بل بداية جديدة.",
    "استمتع باللحظة ولا تندم على الماضي.",
    "المثابرة هي طريق النجاح.",
    "استثمر في نفسك، فذلك أفضل استثمار.",
    "كل لحظة تمضي هي فرصة لتكون أفضل.",
    "العقل هو مصدر القوة.",
    "النجاح يتطلب الجهد والإصرار.",
    "تقبل النقد البناء واعتبره فرصة للتحسين.",
    "لا تتردد في اتخاذ خطوات جديدة.",
    "السعادة تبدأ من الداخل.",
    "اجعل من الفشل درسًا تتعلم منه.",
    "كل تجربة تضيف إلى حياتك قيمة.",
    "تعلم أن تقول لا للأشياء السلبية.",
    "العلاقات الجيدة تبني بيئة إيجابية.",
    "استمتع بالرحلة أكثر من الوصول.",
    "لا تخف من المجهول، فهو مليء بالفرص.",
    "ابحث عن الجمال في الأشياء البسيطة.",
    "كل إنجاز يبدأ بفكرة.",
    "كن لطيفًا مع نفسك في الأوقات الصعبة.",
    "تقبل نفسك كما أنت.",
    "استمع لصوتك الداخلي.",
    "اجعل من التفكير الإيجابي عادة.",
    "كن مرنًا في مواجهة التحديات.",
    "تعلم من تجارب الآخرين.",
    "الأمل هو القوة التي تدفعك للأمام.",
    "كل شيء ممكن إذا كنت تؤمن بنفسك.",
    "لا تدع الخوف يمنعك من تحقيق أحلامك.",
    "النجاح ليس حظًا، بل نتاج الجهد.",
    "استمتع بكل لحظة من حياتك.",
    "تذكر أن الحياة قصيرة، فاستغلها.",
    "كن مبتكرًا في حلولك.",
    "اجعل من أحلامك واقعًا.",
    "المثابرة تؤدي إلى النجاح.",
    "تقبل التغيير كجزء من الحياة.",
    "اعمل بجد، وكن صادقًا مع نفسك.",
    "كل لحظة تعيشها هي فرصة للتعلم.",
    "ابحث عن المعرفة في كل مكان.",
    "تعلم أن تكون إيجابيًا في كل الظروف.",
    "الأوقات الصعبة تصنع الأشخاص الأقوى.",
    "استمتع بالتحديات، فهي تصنع منك شخصًا أفضل.",
    "استثمر وقتك في الأشياء التي تهمك.",
    "تقبل الفشل كجزء من النجاح.",
    "اجعل من التعلم عادة يومية.",
    "الأفكار الإيجابية تجذب النتائج الإيجابية.",
    "كن قدوة للآخرين.",
    "استمع أكثر مما تتحدث.",
    "كل شيء يبدأ بخطوة واحدة.",
    "العطاء يجلب السعادة.",
    "استمتع بالطبيعة حولك.",
    "كن صبورًا مع نفسك.",
    "تجنب السلبية واحرص على الإيجابية.",
    "اجعل من كل يوم فرصة جديدة.",
    "كن شجاعًا في مواجهة مخاوفك.",
    "تقبل النقد كفرصة للتحسين.",
    "اجعل من التعلم رحلة ممتعة.",
    "الأصدقاء الحقيقيون يدعمونك دائمًا.",
    "استمتع باللحظة، فالحياة قصيرة.",
    "ابحث عن الفرح في الأشياء البسيطة.",
    "تعلم من أخطائك ولا تتجاهلها.",
    "النجاح يأتي مع العمل الجاد.",
    "كن مرنًا في تفكيرك.",
    "استمتع بالرحلة وليس فقط بالوجهة.",
    "اجعل من التحديات فرصًا للتطور.",
    "كل تجربة تضيف إلى حياتك قيمة.",
    "لا تتردد في تجربة أشياء جديدة.",
    "الأمل هو الضوء في الظلام.",
    "كن إيجابيًا في حديثك.",
    "اجعل من التعلم عادة.",
    "الحياة مليئة بالألوان، استمتع بها.",
    "كن لطيفًا مع نفسك ومع الآخرين.",
    "تقدير اللحظات الصغيرة يجلب السعادة.",
    "استمتع بالرحلة، فكل يوم هو مغامرة.",
    "العناية بالنفس هي أولوية.",
    "تجنب المقارنات مع الآخرين.",
    "حقق أهدافك بخطوات صغيرة.",
    "الحكمة تأتي من التجربة.",
    "اجعل من كل يوم فرصة جديدة.",
    "كن شجاعًا في اتخاذ القرارات.",
    "تقبل التحديات كفرص للنمو.",
    "استمتع باللحظة، فهي لن تتكرر.",
    "كن مبدعًا في أفكارك.",
    "تذكر أن النجاح يحتاج إلى خطة.",
    "استثمر في نفسك، فذلك أفضل استثمار.",
    "كن صديقًا للبيئة.",
    "استمتع بالأشياء التي تحبها.",
    "اجعل من التعلم عادة يومية.",
    "العزيمة تصنع الفرق.",
    "كن متفائلًا في كل الأوقات.",
    "استمتع بالتفاصيل الصغيرة.",
    "اجعل من الفشل خطوة نحو النجاح.",
    "ابحث عن الإلهام في كل مكان.",
    "تقبل التغيير كجزء من الحياة.",
    "كن إيجابيًا في كل ما تقوم به.",
    "المثابرة تؤدي إلى النجاح.",
    "استمتع بالأشياء التي تحبها.",
    "اجعل من التعلم رحلة ممتعة.",
    "تذكر أن الحياة مليئة بالفرص، اغتنمها.",
    "كونوا إيجابيين، فالعالم يحتاجكم.",
    "استمتع باللحظة، فكل يوم هو هدية."
    "كل يوم يحمل بدايات جديدة.",
    "التحديات تصنع الأبطال.",
    "الإبداع هو مفتاح النجاح.",
    "تذكر أن كل خطوة صغيرة تقربك من هدفك.",
    "كن جريئًا في أحلامك.",
    "الحياة مليئة بالمفاجآت، استعد للقبول.",
    "المخاطر المحسوبة تقود إلى الإنجازات.",
    "الأشخاص الإيجابيون يجذبون الفرص.",
    "استمتع بكل لحظة كأنها الأخيرة.",
    "اجعل من التعلم شغفك.",
    "الراحة تأتي بعد العمل الجاد.",
    "تقبل نفسك، فأنت فريد من نوعك.",
    "النجاح يحتاج إلى خطة واضحة.",
    "كل لحظة تعتبر درسًا في الحياة.",
    "الأمل هو القوة التي تحرك العالم.",
    "كل تجربة تضيف لك شيئًا جديدًا.",
    "كن من الذين يصنعون الفارق.",
    "العزيمة تصنع المستحيل.",
    "الحياة ليست سباقًا، بل رحلة.",
    "استثمر في مهاراتك، فهي ثروتك.",
    "تقبل النقد كوسيلة للنمو.",
    "كل فشل هو فرصة للبدء من جديد.",
    "ابحث عن السعادة في الأشياء البسيطة.",
    "تعلم أن تقدر اللحظات الجميلة.",
    "اجعل من كل يوم فرصة للنمو.",
    "الإيجابية تجلب الطاقة الجيدة.",
    "ابدأ اليوم بأفكار جديدة.",
    "استمع لحدسك، فهو مرشدك.",
    "كلما زاد التحدي، زادت الفرصة للنجاح.",
    "كن مبتكرًا في أفكارك.",
    "التغيير هو الطريق نحو التحسن.",
    "الأشخاص الناجحون يتعلمون من أخطائهم.",
    "اجعل من الفشل دافعًا للنجاح.",
    "الوقت أثمن ما تملك، استثمره بحكمة.",
    "تقبل أن الحياة ليست مثالية.",
    "الأفكار الكبيرة تبدأ بخطوات صغيرة.",
    "كن متفائلًا، فكل شيء ممكن.",
    "استمتع بالرحلة، فكل يوم هو مغامرة.",
    "تذكر أن التعلم مستمر مدى الحياة.",
    "كن شجاعًا في مواجهة الصعوبات.",
    "استثمر في علاقاتك، فهي أهم ما تملك.",
    "العزيمة تقودك إلى النجاح.",
    "اجعل من كل تحدٍ فرصة للتطور.",
    "تعلم أن تكون مرنًا في خططك.",
    "كل إنجاز يبدأ بفكرة.",
    "كن منفتحًا للتغيير.",
    "احترم مسيرتك، فكل شخص لديه وقته.",
    "استمتع باللحظات الصغيرة.",
    "كن إيجابيًا، فذلك يجذب الإيجابية.",
    "اجعل من التعلم تجربة ممتعة.",
    "الأمل يدفعك للأمام.",
    "استمع لقصص الآخرين لتتعلم.",
    "تقبل أن الحياة مليئة بالتحديات.",
    "ابحث عن الإلهام في كل مكان.",
    "كن متفائلاً حتى في الأوقات الصعبة.",
    "تذكر أن النجاح يأتي بالتدريج.",
    "استمتع بكل خطوة تخطوها.",
    "العزيمة تصنع الفارق.",
    "اجعل من الفشل درسًا مهمًا.",
    "كن الشخص الذي ترغب في أن تكونه.",
    "استثمر في مهاراتك وتطوير نفسك.",
    "تقبل أن الأخطاء جزء من التعلم.",
    "كل لحظة تحمل فرصة جديدة.",
    "كن جريئًا في التعبير عن أفكارك.",
    "اجعل من كل يوم بداية جديدة.",
    "الأشياء العظيمة تحتاج إلى وقت.",
    "استمتع بالتفاصيل الصغيرة في الحياة.",
    "كن منفتحًا للتعلم من الآخرين.",
    "تقبل أن النجاح يتطلب جهدًا.",
    "اجعل من الفشل دافعًا للاستمرار.",
    "كل تحدٍ هو فرصة للنمو.",
    "كونوا صادقين مع أنفسكم.",
    "استمع لحدسك في اتخاذ القرارات.",
    "ابحث عن الفرص في كل تحدٍ.",
    "كن إيجابيًا في كل ما تفعل.",
    "استمتع باللحظة، فهي لا تتكرر.",
    "اجعل من كل يوم فرصة للتغيير.",
    "تقبل أن الحياة مليئة بالمفاجآت.",
    "كن فخورًا بما حققته.",
    "استمتع بالرحلة، فكل يوم هو درس.",
    "تذكر أن النجاح يتطلب الصبر.",
    "اجعل من التحسين المستمر عادة.",
    "كن قائدًا لنفسك.",
    "استمتع بالتفاصيل، فهي تصنع الفارق.",
    "كل يوم هو فرصة جديدة للتقدم.",
    "كن من الذين يصنعون الفارق في المجتمع.",
]





@bot.message_handler(func=lambda message: message.text.lower() == "كلمات")
def start_words_game(message):
    word = random.choice(word_list)
    current_words[message.from_user.id] = word
    start_times[message.from_user.id] = time.time()
    game_active[message.from_user.id] = True
    formatted_word = f"الكلمة ↢ ( {word} )"
    bot.send_message(message.chat.id, formatted_word)

@bot.message_handler(func=lambda m: m.from_user.id in current_words and game_active.get(m.from_user.id, False))
def check_word_answer(answer_message):
    user_id = answer_message.from_user.id
    if user_id in current_words:
        word = current_words[user_id]
        elapsed_time = time.time() - start_times[user_id]
        
        is_correct = answer_message.text.strip() == word

        if is_correct:
            user_points[user_id] += 8
            elapsed_time_str = f"{elapsed_time:.2f} ثانية"
            bot.send_message(answer_message.chat.id, f"صح عليك {answer_message.from_user.first_name} ✔️\n⏰ الوقت: {elapsed_time_str}\n💸 فلوسك: {user_points[user_id]} ريال\n༄")
            del current_words[user_id]
            del start_times[user_id]
            game_active[user_id] = False
        else:
            bot.send_message(answer_message.chat.id, "اجابتك غلط، قفلت اللعبة.")
            del current_words[user_id]
            del start_times[user_id]
            game_active[user_id] = False

# قاموس الكلمات
word_list = [
    "تفاح", "خوخ", "كرسي", "سيارة", "طيارة", "مكتب", "كتاب", "قلم", "كمبيوتر",
    "جهاز", "هاتف", "ساعة", "منزل", "نافذة", "باب", "طاولة", "سرير", "مطبخ",
    "ثلاجة", "فرن", "غسالة", "مروحة", "تلفاز", "سجادة", "لوحة", "صورة",
    "زهرية", "شجرة", "وردة", "نبات", "عشب", "حديقة", "مزرعة", "دجاجة",
    "بقرة", "خروف", "حصان", "كلب", "قط", "سمكة", "عصفور", "فأر", "زرافة",
    "فيل", "أسد", "نمر", "بوم", "دب", "تنين", "أرنب", "سنجاب", "قنفذ",
    "دولاب", "عربة", "دراجة", "مظلة", "سفينة", "قطار", "طائرة", "صاروخ",
    "خريطة", "مجلة", "جرائد", "مخطوطة", "دفتر", "ورقة", "ممحاة", "مسطرة",
    "مسجل", "أقراص", "فيديو", "صور", "تذكرة", "كارت", "مفتاح", "محفظة",
    "نقود", "بطاقة", "سماعة", "شاحن", "شاشة", "مكيف", "سخان", "مطبخ",
    "أطباق", "كأس", "ملعقة", "شوكة", "سكاكين", "صحن", "فتاحة", "مصفاة",
    "طباخ", "مقلاة", "ملاعق", "مغرفة", "سلة", "برطمان", "خلاط", "عجانة",
    "فرن", "محمصة", "خزائن", "مقبض", "عقد", "سوار", "خاتم", "حقيبة",
    "نظارات", "ساعة", "بوابة", "سلم", "مصعد", "دور", "طابق", "غرفة",
    "حمام", "غرفة نوم", "صالة", "حديقة", "شرفة", "مدخل", "ممر", "درج",
    "سقف", "جدار", "أرضية", "نافذة", "حائط", "سياج", "بوابة", "ساحة",
    "زهور", "نباتات", "عشب", "أوراق", "ثمار", "فواكه", "خضروات", "بذور",
    "صبار", "عنب", "برتقال", "ليمون", "موز", "كيوي", "أناناس", "مانجو",
    "طماطم", "خيار", "جزر", "فلفل", "بصل", "ثوم", "فطر", "قرع", "كوسا",
    "ملفوف", "سبانخ", "فاصوليا", "بازلاء", "عدس", "حمص", "فول", "طحين",
    "سكر", "ملح", "زيت", "خل", "بهارات", "قهوة", "شاي", "عصير", "حليب",
    "زبدة", "جبن", "لحم", "دجاج", "سمك", "حساء", "سلطة", "مكرونة", "أرز",
    "خبز", "كعكة", "حلوى", "فطيرة", "بسكويت", "آيس كريم", "عسل", "فانيليا",
    "قرفة", "زنجبيل", "نعناع", "بقدونس", "ريحان", "زعتر", "كزبرة", "فلفل أسود",
    "ملح طعام", "زيت زيتون", "زيت عباد الشمس", "زيت جوز الهند", "خل أبيض",
    "خل تفاح", "عصير ليمون", "عصير برتقال", "عصير جزر", "عصير تفاح", "ماء",
    "ثلج", "مشروبات غازية", "عصائر طبيعية", "مشروبات رياضية", "شوكولاتة",
    "كراتين", "علب", "زجاجات", "أكياس", "علب بلاستيك", "صناديق", "أكياس ورقية",
    "أكياس قماش", "أدوات مطبخ", "أدوات منزلية", "أدوات كهربائية", "أدوات يدوية",
    "أدوات زراعية", "أدوات مكتبية", "مفاتيح", "أدوات تنظيف", "مناشف", "سجاد",
    "ستائر", "وسائد", "بطانيات", "أغطية", "مفارش", "ملايات", "شراشف", "مخدات",
    "كراسي", "أرائك", "طاولات", "خزائن", "دواليب", "أرفف", "مكاتب", "أدراج",
    "سلالم", "سلال", "خزائن ملابس", "صناديق تخزين", "أدوات زينة", "مرايا",
    "لوحات فنية", "صور عائلية", "ساعات حائط", "ألعاب", "ألعاب أطفال", "ألعاب لوحية",
    "ألعاب رياضية", "ألعاب إلكترونية", "ألعاب تعليمية", "ألعاب مائية", "ألعاب حركية",
    "كتب أطفال", "قصص", "قصص خيالية", "كتب تعليمية", "كتب طبخ", "كتب علمية",
    "كتب أدبية", "كتب تاريخية", "كتب دينية", "كتب شعر", "كتب فلسفية", 
    "كتب فنية", "كتب رسم", "كتب موسيقية", "كتب تطوير ذات", "كتب سيرة ذاتية",
    "كتب مغامرات", "كتب رؤى مستقبلية", "قصائد", "أشعار", "أمثال", "حكايات",
    "قصص قصيرة", "قصص شعبية", "حكايات خيالية", "أساطير", "أقوال مأثورة",
    "إقتباسات", "مقولات تحفيزية", "نصائح", "أفكار", "خطط", "استراتيجيات",
    "توجهات", "مبادئ", "قيم", "أخلاق", "أهداف", "طموحات", "رؤية", "مهمة",
    "استكشاف", "تجارب", "مغامرات", "أحداث", "تاريخ", "ثقافة", "حضارة",
    "تقنيات", "اختراعات", "ابتكارات", "علوم", "معرفة", "تعليم", "تدريب",
    "تطوير", "تحسين", "تقدم", "نجاح", "إنجاز", "تميز", "إبداع", "تفكير",
    "تحليل", "استنتاج", "استكشاف", "فهم", "استيعاب", "تعلم", "تعليم",
    "تواصل", "مشاركة", "تعاون", "مساعدة", "دعم", "تشجيع", "تحفيز", "إلهام",
    "تقدير", "احترام", "ملل", "صداقة", "عائلة", "مجتمع", "بيئة", "عالم",
    "كون", "حياة", "وجود", "وجودية", "فكر", "فكر نقدي", "فكر إيجابي",
    "فكر علمي", "فكر فلسفي", "فكر استراتيجي", "فكر مبتكر", "فكر إبداعي",
    "فكر تحليلي", "فكر تطويري", "فكر اجتماعي", "فكر ثقافي", "فكر شامل",
    "فكر جماعي", "فكر فردي", "فكر مهني", "فكر أكاديمي", "عطر", "عطرية",
    "مستحضرات", "مكياج", "مستحضرات تجميل", "صابون", "شامبو", "بلسم", 
    "مراهم", "كريمات", "مرطبات", "زيوت", "زيوت عطرية", "صابون سائل",
    "صابون صلب", "فازلين", "غسول", "معطر", "معطرات", "مرطب", "مناديل",
    "سياااره", "برنامج", "صورتين", "زيوت شعر", "فيشوال", "عناية بالشعر",
    "صناديق مجوهرات", "مجوهرات", "أقراط", "دبابيس", "قلادة", "سلسلة", 
    "خاتم", "سوار", "عقد", "حلي", "مكسرات", "فواكه مجففة", "شوكولاتة", 
    "عصائر", "مشروبات", "مربى", "مخللات", "زبدة فول سوداني", "جبنة", 
    "جبنة شيدر", "جبنة موزاريلا", "جبنة فيتا", "جبنة كريمية", "جبنة طازجة",
    "فواكه طازجة", "خضار طازجة", "فواكه مجمدة", "خضار مجمدة", "مأكولات بحرية",
    "فواكه بحرية", "خضار بحرية", "بهارات", "تتبيلات", "صلصات", "مخللات",
    "زيتون", "زيتون أخضر", "زيتون أسود", "فلفل حار", "فلفل حلو", "فلفل أسود",
    "حبوب", "عدس", "فاصوليا", "حمص", "بقوليات", "حبوب كاملة", "حبوب مفيدة",
    "مشروبات ساخنة", "مشروبات باردة", "عصائر طبيعية", "عصائر طازجة", "عصائر مصنعة",
    "عصائر معلبة", "مشروبات غازية", "مشروبات رياضية", "مشروبات طاقة", "مشروبات فواكه",
    "مشروبات خاصة", "ماء معدني", "ماء غازي", "ماء عادي", "ماء فوار", "ماء فواكه",
    "ماء معطر", "ماء مقطر", "ماء فاتر", "ماء مثلج", "ماء ساخن", "ماء مفلتر",
    "مشروبات دافئة", "مشروبات ساخنة", "شاي أخضر", "شاي أسود", "شاي أعشاب",
    "شاي فواكه", "شاي مثلج", "شاي طازج", "قهوة سريعة", "قهوة مطحونة",
    "قهوة محمصة", "قهوة عربية", "قهوة فرنسية", "قهوة إسبريسو", "قهوة كابتشينو",
    "قهوة لاتيه", "قهوة مثلجة", "قهوة مثلجة", "شوكولاتة ساخنة", "شوكولاتة باردة",
    "شوكولاتة بالحليب", "شوكولاتة داكنة", "شوكولاتة حليب", "شوكولاتة بيضاء",
    "شوكولاتة مشروبات", "شوكولاتة كعكة", "شوكولاتة فواكه", "شوكولاتة مكسرات",
    "شوكولاتة سائلة", "شوكولاتة صلبة", "شوكولاتة سكر", "شوكولاتة طازجة"
]


@bot.message_handler(func=lambda message: message.text.lower() == "كت")
def handle_kit(message):
    question = random.choice(questions_dict)
    bot.send_message(message.chat.id, question)

# قاموس الأسئلة
questions_dict = [
    "ردّك على شخص قال 'أنا بطلع من حياتك'؟",
    "تعتقد اشباهك الاربعين عايشين حياة حلوة؟",
    "اكثر شيء تحبه بـ شكلك؟",
    "انا مدمن على ... ؟",
    "شخص تحب تستفزه؟",
    "تحب تتعرف على ناس جديدة ولا اكتفيت بالي عندك؟",
    "ايش الوظيفة التي تستحق أعلى راتب؟",
    "شخص يعرف عنك كل شي تقريباً؟",
    "امدح نفسك بكلمة وحدة بس.",
    "وش الشيء الي يكرهه اقرب صاحب لك؟",
    "وش تحب تسوي وقت فضاوتك؟",
    "مع او ضد: يموت الحب لو طال الغياب؟",
    "تهتم انك تعرف تاريخ ميلاد الي تحبهم؟",
    "كيف تعرفت على اعز صديق لك؟",
    "مع او ضد ما تعرف قيمة الشخص اذا فقدته؟",
    "قوة الصداقة بالمدة ولا بالمواقف؟",
    "تحب تتعرف على ناس جدد ولا مكتفي باللي عندك؟",
    "وش اجمل لهجة عربية بالنسبة لك؟",
    "اكثر ريحة تجيب راسك؟",
    "وش معنى اسمك؟",
    "عادي تتغير عشان شخص تحبه؟",
    "إيش تفضل صح وخطأ ولا خيارات؟",
    "اكثر شخص يتصل عليك بالواتس؟",
    "أسم وانطباعك عنه؟",
    "تسمع شيلات؟",
    "مع او ضد الاهتمام الزائد يضايق؟",
    "لو بيدك تغير بالزمن, تقدمه ولا ترجعه؟",
    "شيء مستحيل تعطيه أحد؟",
    "أطول مدة نمت فيها كم ساعة؟",
    "وش قبيلتك؟",
    "دائما قوة الصداقة بـ ...؟",
    "اكثر اغنية تكرهها؟",
    "منشن .. شخص واسأله سؤال؟",
    "هل بمره فكرت تنتحر؟",
    "كم عدد الورعان عندكم فالبيت؟",
    # المطور @M3_mo2
# قناه المطور https://t.me/M1telegramM1
    "شيء كل م تذكرته تبتسم؟",
    "كيف تعرف ان هالشخص يحبك؟",
    "تقييمك للتليقرام الفترة هذي؟",
    "محادثة ولا مكالمة؟",
    "من النوع الي تعترف ولا تجحد؟",
    "كلمة بـ لهجتك تحس م احد بيعرفها؟قناه المطور   https://t.me/M1telegramM1
    "اكثر مشاكلك بسبب؟",
    "كم داخل قروب بالتليقرام؟",
    "تجامل ولا صريح؟",
    "تهمك التفاصيل ولا الزبدة من الموضوع؟",
    "لو واحد يتدخل ف امورك وانت م طلبت منه وش بتقوله؟",
    "اطول مدة جلسة تذاكر فيها بشكل متواصل كم ساعة؟",
    "منشن... اي شخص واوصفه بـ كلام بسيط؟",
    "العصر إيش كنت تسوي؟",
    "اشياء تغيرت نظرتك لها",
    "مع او ضد ... اقاربك يعرفون عن حساباتك في برامج التواصل ؟",
    "منشن : شخص تشوف انه يجذبك ؟",
    "شيء من الماضي للحين عندك ؟",
    "اخر شخص تهاوشت معه مين ؟",
    "الصق وارسل اخر شيء نسخته ..",
    "اكثر شخص يسوي فيك مقالب ؟",
    "احقر الناس هو من ... ؟",
    "اذا انسجنت وش تتوقع بتكون التهمة الي عليك ؟",
    "مع او ضد : العتاب على قدر المحبة ؟",
    "ذكرى جميلة ودك تتكرر ؟",
    "شخص تحب ابتسامته ؟",
    "وش اليوم الي تكرف فيه كثير ؟",
    "شيء نفسك تجربه ؟",
    "بالعادة برمضان تنحف ولاتسمن ؟",
    "تحب زين ؟",
    "شيء تشوف نفسك مبدع فيه ؟",
    "من الاشياء الي تجيب لك الصداع ؟",
    "مع او ضد : كل شيء راح يتعوض ؟",
    "اخر شخص تهاوشت معه مين ؟",
    "متى اخر مره نمت أكثر من 12 ساعة ؟",
    "منشن .. شخص تحب سوالفه ؟",
    "اذا كنت بنقاش مع شخص وطلع الحق معه تعترف له ولا تصر على كلامك ؟",
    "وش مسمي اقرب شخص لك بالجوال ؟",
    "متى تصير نفسية ؟",
    "اكثر ريحة تجيب راسك ؟",
    "مرتبطة سعادتك مع سعادة مين ؟",
    "زمن تتمنى لو انك انولدت فيه ؟",
    "اشياء تبين عليك اذا زعلت ؟",
    "كم من 10 البرود فيك ؟",
    "نصيحه صغيرة من واقع تجربتّك؟",
    "كلمة لـ شخص عزيز عليك ؟",
    "منشن .. الشخص الي عادي تقوله اسرارك ؟",
    "فـ اي برنامج كنت قبل تجي التليقرام ؟",
    "اكثر شيء ضيعت عليه فلوسك ؟",
    "اكتب الكلمة بـ لهجتك 'هربت'",
    "كم مره تشحن جوالك باليوم ؟",
    "مكان تبي تكون فيه الحين ؟",
    "كيف تعالج الغيرة الزايدة ؟",
    "مع او ضد : الغيرة بين الاصدقاء ؟",
    "شخص مستحيل تمسك ضحكتك معاه؟",
    "شخص تحب تنشب له ؟",
    "اغلب وقتك ضايع على ؟",
    "إيش تفضل صح وخطأ ولا خيارات ؟",
    "تشوف انك قادر على تحمل المسؤولية ؟",
    "نشوف نفسك تعرف تقنع الاشخاص ولا لا ؟",
    "تفضل .. الاعمال الحرة ولا الوظيفة ؟",
    "اكثر شخص يكرفك ؟",
    "اكثر كذبة تقولها ؟",
    "انسان م تحب تتعامل معه ابد ؟",
    "مع او ضد: تفضيل الصراحة على المجاملة؟",
    "ما هو أكثر شيء يجعلك سعيدًا في الحياة؟",
    "هل تؤمن بالحب من أول نظرة؟",
    "ما هو الشيء الذي تندم عليه؟",
    "شخص تعتبره قدوة لك؟",
    "لو كان لديك فرصة للسفر إلى أي مكان، أين ستذهب ولماذا؟",
    "أكثر موقف محرج تعرضت له؟",
    "ما هي أكثر مهارة تتمنى تعلمها؟",
    "هل تفضل العزلة أم الاختلاط بالناس؟",
    "ما هو أفضل قرار اتخذته في حياتك؟",
    "كم مره سويت نفسك غبي وانت فاهم ، ومع مين ؟",
    "عندك شخص مستحيل يمر يوم وما تكلمه ؟",
    "صوت مغني م تحبه ؟",
    "اذا احد سألك عن شيء م تعرفه تقول م اعرف ولا تتفلسف ؟",
    "احلى عطر شريته ؟",
    "مع او ضد الصحبة تغني عن الحب ؟",
    "تتقبل النصيحة من أي أحد ؟",
    "وش طريقتك في معاتبة شخص ؟",
    "شكلك يعطي لأي جنسية ؟",
    "تحب توجه الكلام عن طريق ' الكتابة ، الصوت '",
    "شيء مستحيل تمل منه ؟",
    "مع او ضد: ان البنت ترفع اثقال وتكون معضلة؟",
    "تتابع مسلسلات ولا ما تهتم ؟",
    "اشياء تتمنى انها م تنتهي ؟",
    "أكثر مكان سافرت له بخيالك ؟",
    "تنسد نفسك عن الاكل لو زعلت ؟",
    "اشياء اذا سويتها لشخص تدل على انك تحبه كثير ؟",
    "تراقب احد بالتليقرام؟",
    "كيف تتعامل مع الاشخاص السلبيين ؟",
    "متى لازم تقول لا ؟",
    "اسم ولد وبنت تحسهم لايقين على بعض ؟",
    "تعاني من التفكير قبل النوم ؟",
    "مين اقرب شخص لك بالعائلة ؟",
    "ردّك على شخص قال 'أنا بطلع من حياتك'؟",
    "تترك احد عشان ماضيه سيء ؟",
    "مع او ضد : السفر يصلح ما افسده الدهر ؟",
    "امدح نفسك بكلمة وحدة بس",
    "حرف تحبه ؟",
    "كم من عشرة تحب الجلسة بالبيت ؟",
    "تتابع مسلسلات ولا ما تهتم ؟",
    "حياتك بكلمة ؟",
    "صفة تخليك تكره الشخص مهما كان قربه منك ؟",
    "اكثر شخص تتهاوش معه ؟",
    "اسمك بدون اول حرفين",
    "اذا احد سألك عن شيء م تعرفه تقول م اعرف ولا تتفلسف ؟",
    "جربت تسكن لحالك؟",
    "ايموجي يعبر عن وضعك الحين ؟",
    "أكثر كلمه تسمعها من أمك ؟",
    "كيف تعالج الغيرة الزايدة ؟",
    "لو كنت محتار بين شخص تحبه وشخص يحبك، من تختار؟",
    "اخر مره بكيت ؟",
    "معروف عند اهلك انك ؟",
    "صوت مغني م تحبه ؟",
    "اكثر شيء محتاجه الحين ؟",
    "لو بيدك تغير بالزمن, تقدمه ولا ترجعه ؟",
    "من النوع الي تجيك الردود القوية بعد الهوشة ولا فـوقتها ؟",
    "كذبة كنت تصدقها وانت صغير ؟",
    "كلمة لأقرب شخص لقلبك ؟",
    "برايك وش افضل انتقام ؟",
    "كيف تتعامل مع الاشخاص السلبيين ؟",
    "ردك الدائم على الكلام الحلو ؟",
    "كم مره سويت نفسك غبي وانت فاهم ، ومع مين ؟",
    "عندك شخص مستحيل يمر يوم وما تكلمه ؟",
    "صوت مغني م تحبه ؟",
    "اذا احد سألك عن شيء م تعرفه تقول م اعرف ولا تتفلسف ؟",
    "احلى عطر شريته ؟",
    "مع او ضد الصحبة تغني عن الحب ؟",
    "تتقبل النصيحة من أي أحد ؟",
    "وش طريقتك في معاتبة شخص ؟",
    "شكلك يعطي لأي جنسية ؟",
    "تحب توجه الكلام عن طريق ' الكتابة ، الصوت '",
    "شيء مستحيل تمل منه ؟",
    "مع او ضد: ان البنت ترفع اثقال وتكون معضلة؟",
    "تتابع مسلسلات ولا ما تهتم ؟",
    "اشياء تتمنى انها م تنتهي ؟",
    "أكثر مكان سافرت له بخيالك ؟",
    "تنسد نفسك عن الاكل لو زعلت ؟",
    "اشياء اذا سويتها لشخص تدل على انك تحبه كثير ؟",
    "تراقب احد بالتليقرام؟",
    "كيف تتعامل مع الاشخاص السلبيين ؟",
    "متى لازم تقول لا ؟",
    "اسم ولد وبنت تحسهم لايقين على بعض ؟",
    "تعاني من التفكير قبل النوم ؟",
    "مين اقرب شخص لك بالعائلة ؟",
    "ردّك على شخص قال 'أنا بطلع من حياتك'؟",
    "تترك احد عشان ماضيه سيء ؟",
    "مع او ضد : السفر يصلح ما افسده الدهر ؟",
    "امدح نفسك بكلمة وحدة بس",
    "حرف تحبه ؟",
    "كم من عشرة تحب الجلسة بالبيت ؟",
    "تتابع مسلسلات ولا ما تهتم ؟",
    "حياتك بكلمة ؟",
    "صفة تخليك تكره الشخص مهما كان قربه منك ؟",
    "اكثر شخص تتهاوش معه ؟",
    "اسمك بدون اول حرفين",
    "اذا احد سألك عن شيء م تعرفه تقول م اعرف ولا تتفلسف ؟",
    "جربت تسكن لحالك؟",
    "ايموجي يعبر عن وضعك الحين ؟",
    "أكثر كلمه تسمعها من أمك ؟",
    "كيف تعالج الغيرة الزايدة ؟",
    "لو كنت محتار بين شخص تحبه وشخص يحبك، من تختار؟",
    "اخر مره بكيت ؟",
    "معروف عند اهلك انك ؟",
    "صوت مغني م تحبه ؟",
    "اكثر شيء محتاجه الحين ؟",
    "لو بيدك تغير بالزمن, تقدمه ولا ترجعه ؟",
    "من النوع الي تجيك الردود القوية بعد الهوشة ولا فـوقتها ؟",
    "كذبة كنت تصدقها وانت صغير ؟",
    "كلمة لأقرب شخص لقلبك ؟",
    "برايك وش افضل انتقام ؟",
    "كيف تتعامل مع الاشخاص السلبيين ؟",
    "ردك الدائم على الكلام الحلو ؟",
    "سؤال دايم تتهرب من الاجابة عليه ؟",
    "اكره شعور ممكن يحس فيه الانسان هو ؟",
    "تحب تتعرف على ناس جديدة ولا اكتفيت بالي عندك ؟",
    "مادة دايم تجيب العيد فيها ؟",
    "تنتظر اتصال من مين ؟",
    "كمل ... انا من الاشخاص اللي... ؟",
    "هواية او تجربة كان ودك تستمر و تركتها ؟",
    "العصر إيش كنت تسوي ؟",
    "شخص مستحيل تمسك ضحكتك معاه؟",
    "دعاء له اثر إبجابي في حياتك ؟",
    "اكثر شخص يكرفك ؟",
    "اطول مدة جلسة تذاكر فيها بشكل متواصل كم ساعة ؟",
    "عمرك طحت بمكان عام ؟",
    "من النوع اللي تحفظ اسامي الناس بسرعه ولا بس اشكالهم ؟",
    "شيء م تحب احد يشاركك فيه ؟",
    "عندك صديق نفس اسمك ؟",
    "تتكلم أكثر ولا تسمع ؟",
    "تفضل .. العيون الناعسة ... العيون الواسعة ؟",
    "كلمة تحب تسمعها حتى لو كنت زعلان ؟",
    "اكتب تاريخ مستحيل تنساه ؟",
    "منشن : شخص تحس الوقت يطير معه ؟",
    "عشان تعيش مرتاح ؟",
    "لو يمديك تقابل شخص من التليقرام مين بيكون ؟",
    "وش اغبى شيء سويته ؟",
    "من النوع الي تجيك الردود القوية بعد الهوشة ولا فـوقتها ؟",
    "أكثر شيء مضيع وقتك فيه ؟",
    "جربت احد يعطيك بلوك وانت تكتب له ؟",
    "منشن : شخص تحس الوقت يطير معه ؟قناه المطور   https://t.me/M1telegramM1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #قناه المطور   https://t.me/M1telegramقناه المطور   https://t.me/M1telegramM1
    "تعاني من التفكير قبل النوم ؟",
    "اكبر مبلغ ضاع منك ؟",
    "اغنيتك المفضلة ؟",
    "عندك مليون ريال بس مايمديك تشتري الا شيء يبدأ بأول حرف من اسمك وش بتشتري ؟",
    "الانتقاد الكثير يغيرك للافضل ولا يحطمك ويخليك للأسوأ ؟",
    "وش معنى اسمك ؟",
    "كلمة لأقرب شخص لقلبك ؟",
    "تقدر تعيش يوم كامل بدون نت ؟",
    "كم تحتاج وقت عشان تتعود على مكان جديد ؟",
    "كيف تعرف اذا هذا الشخص يكذب ولا لا ؟",
    "تعتقد اشباهك الاربعين عايشين حياة حلوة ؟",
    "كم وجبة تاكل فاليوم الفترة هذي؟",
    "مشهور ، او مشهورة .. يشبهونك فيه",
    "وش طموحك بالحياة ؟",
    "أصعب انتظار ؟",
    "شخصية كرتونية تأثرت فيها وانت صغير ؟",
    "اكتب كلام ودك الناس يطبقونه ؟",
    "وش اكثر فاكهة تحبها ؟",
    "شيء تشوف نفسك مبدع فيه ؟",
    "مر عليك شخص ف حياتك مستحيل انك تسامحه ؟",
    "لو حياتك عبارة عن كتاب .. وش بيكون اسمه ؟",
    "وش رايك باللي يقرأ ولا يرد ؟",
    "هات صورة تحس إنك ابدعت بتصويرها",
    "كم من عشرة متفائل بالمستقبل ؟",
    "شخص تحب ابتسامته ؟",
    "أطول مدة نمت فيها كم ساعه ؟",
    "كم مرة غشيت ف الاختبارات ؟",
    "لو حظك ينباع ، بكم بيكون ؟",
    "اكبر كذبة كذبتها على مين ؟ ووش كانت ؟",
    "مع او ضد الصحبة تغني عن الحب ؟",
    "من النوع اللي تحفظ اسامي الناس بسرعه ولا بس اشكالهم ؟",
    "جربت تسكن لحالك؟",
    "اكثر كذبة تقولها ؟",
    "كلمة تخليك تلبي الطلب حق الشخص بدون تفكير ؟",
    "اذا زعلت إيش يرضيك ؟",
    "لو بيدك توقف شيء يصير ، وش راح توقف ؟",
    "شيء نفسك يرجع ؟",
    "كلمة لـ شخص عزيز عليك ؟",
    "كم تحتاج وقت عشان تتعود على مكان جديد ؟",
    "اخر مره بكيت متى ؟",
    "اخر شخص عصبت عليه ؟",
    "اغلب وقتك ضايع على ؟",
    "كلمة تختصر وضعك الحين ؟",
    "شيء حظك فيه حلو ؟",
    "اكثر شيء تحبه بـ شكلك ؟",
    "اكثر مشاكلك بسبب ؟",
    "شيء عندك اهم من الناس ؟",
    "شيء دايم يضيع منك ؟",
    "قوة الاستيعاب عندك من 10",
    "حاجة تشوف نفسك مبدع فيها ؟",
    "ردك على من يدور الزعل ؟",
    "قل حقيقه عنك ؟",
    "اشياء تبين عليك اذا زعلت ؟",
    "انت مدمن تفكير ؟",
    "وش حذفت من قاموس حياتك ؟",
    "كم من عشرة تعطي اهتمامك بدراستك أو شغلك ؟",
    "قبل امس الوقت هذا إيش كنت تسوي ؟",
    "جربت ينسحب جوالك فترة الاختبارات ؟",
    "وش اسم الحي الي ساكن فيه ؟",
    "مراقبة شخص تركته .. فضول ولا بقايا مشاعر ؟",
    "مع او ضد الاهتمام الزائد يضايق ؟",
    "جربت شعور حب من طرف واحد ؟",
    "اكبر مبلغ ضاع منك ؟",
    "مر عليك شخص ف حياتك مستحيل انك تسامحه ؟",
    "لو حياتك عبارة عن كتاب .. وش بيكون اسمه ؟",
    "وش رايك باللي يقرأ ولا يرد ؟",
    "هات صورة تحس إنك ابدعت بتصويرها",
    "كم من عشرة متفائل بالمستقبل ؟",
    "شخص تحب ابتسامته ؟",
    "أطول مدة نمت فيها كم ساعه ؟",
    "كم مرة غشيت ف الاختبارات ؟",
    "لو حظك ينباع ، بكم بيكون ؟",
    "اكبر كذبة كذبتها على مين ؟ ووش كانت ؟",
    "مع او ضد الصحبة تغني عن الحب ؟",
    "من النوع اللي تحفظ اسامي الناس بسرعه ولا بس اشكالهم ؟",
    "جربت تسكن لحالك؟",
 # المطور @M3_mo2
# قناه المطور https://t.me/M1telegramM1
 
    "اكثر كذبة تقولها ؟",
    "كلمة تخليك تلبي الطلب حق الشخص بدون تفكير ؟",
    "اذا زعلت إيش يرضيك ؟",
    "لو بيدك توقف شيء يصير ، وش راح توقف ؟",
    "شيء نفسك يرجع ؟",
    "كلمة لـ شخص عزيز عليك ؟",
    "كم تحتاج وقت عشان تتعود على مكان جديد ؟",
    "اخر مره بكيت متى ؟",
    "اخر شخص عصبت عليه ؟",
    "اغلب وقتك ضايع على ؟",
    "كلمة تختصر وضعك الحين ؟",
    "شيء حظك فيه حلو ؟",
    "اكثر شيء تحبه بـ شكلك ؟",
    "اكثر مشاكلك بسبب ؟",
    "شيء عندك اهم من الناس ؟",
    "شيء دايم يضيع منك ؟",
    "قوة الاستيعاب عندك من 10",
    "حاجة تشوف نفسك مبدع فيها ؟",
    "ردك على من يدور الزعل ؟",
    "قل حقيقه عنك ؟",
    "اشياء تبين عليك اذا زعلت ؟",
    "انت مدمن تفكير ؟",
    "وش حذفت من قاموس حياتك ؟",
    "كم من عشرة تعطي اهتمامك بدراستك أو شغلك ؟",
    "قبل امس الوقت هذا إيش كنت تسوي ؟",
    "جربت ينسحب جوالك فترة الاختبارات ؟",
    "وش اسم الحي الي ساكن فيه ؟",
    "مراقبة شخص تركته .. فضول ولا بقايا مشاعر ؟",
    "مع او ضد الاهتمام الزائد يضايق ؟",
    "جربت شعور حب من طرف واحد ؟",
    "اكبر مبلغ ضاع منك ؟",
    "مر عليك شخص ف حياتك مستحيل انك تسامحه ؟",
    "لو حياتك عبارة عن كتاب .. وش بيكون اسمه ؟",
    "وش رايك باللي يقرأ ولا يرد ؟",
    "شيء مستحيل تعطيه أحد ؟",
    "كمل : النفس تميل لـ ... ؟",
    "كم عدد الصور بجوالك ؟",
    "اسم تحس صاحبه فخم ؟",
    "شيء واحد .. م عاد يهمك كثر اول ؟",
    "شخصية كرتونية تأثرت فيها وانت صغير ؟",
    "وش الي مستحيل يكون لك اهتمام فيه ؟",
    "كلمة او عبارة مستحيل تنساها ؟",
    "كلمة بـ لهجتك تحس م احد بيعرفها ؟",
    "عمرك بكيت على شخص مات في مسلسل ؟",
    "ايامك هالفترة عبارة عن ؟",
    "أطول مكالمة لك كم كانت مدتها ؟",
    "مع او ضد : كل شيء حلو يكون فالبداية بس ؟",
    "مع او ضد : كل شيء حلو يكون فالبداية بس ؟",
    "تعطي الناس فرصة تتقرب منك ؟",
    "كم درجة الحرارة عندكم ؟",
    "شيء دايم يضيع منك ؟",
    "أكثر شي يعتمدون عليك فيه ؟",
    "الشيء الي تحسه يجذبك للشخص هو ؟",
    "كم من عشرة تحب الهدوء ؟",
    "الفلوس كل شيء ؟",
    "كيف تعرف ان هالشخص يحبك ؟",
    "إيش لون جوالك ؟",
    "اخر مرة انضربت فيها من احد اهلك ، وليه ؟",
    "كم عدد الورعان عندكم فالبيت ؟",
    "حصلت الشخص الي يفهمك ولا باقي ؟",
    "شيء مهما حطيت فيه فلوس بتكون مبسوط",
    "لو احد قالك اكرهك وش بتقول له ؟",
    "وش اكثر سؤال يدور في بالك ؟",
    "على وش ندمت ؟",
    "تحب سوالف مين ؟",
    "تحب تتعرف على ناس جديدة ولا اكتفيت بالي عندك ؟",
    "كيف تفرغ عصبيتك بالعادة ؟",
    "حاجة تشوف نفسك مبدع فيها ؟",
    "اول شيء يلفت انتباهك بشخص اول مرة تقابله ؟",
    "عندك صديق نفس اسمك ؟",
    "طبعك صريح ولا تجامل ؟",
    "نصيحه صغيرة من واقع تجربتّك؟",
    "اكثر شيء ساحب عليه الفترة هذي ؟",
    "شيء تفكر تشتريه ؟",
    "عمرك طحت بمكان عام ؟",
    "وين جالس الحين ؟",
    "شيء كل م تذكرته تبتسم ؟",
    "اكثر شيء حظك سيء فيه ؟",
    "كم داخل قروب بالتليقرام؟",
    "تهتم انك تعرف تاريخ ميلاد الي تحبهم ؟",
    "تجامل ولا صريح ؟",
    "اقوى جملة عتاب وصلتك ؟",
    "مشهور ، او مشهورة .. يشبهونك فيه",
    "منشن... لو بتختار شخص تفضفض له مين بيكون ؟",
    "إيش تفضل صح وخطأ ولا خيارات ؟",
    "كم من 10 نسبة الخمول فيك هالايام ؟",
    "لو فقط مسموح شخص واحد تتابعه فالسناب مين بيكون ؟",
    "وش اسم اول شخص تعرفت عليه بالتليقرام ؟",
    "وش الفايدة الي اخذتها من التليقرام ؟",
    "منشن ..اكثر شخص يفهمك ؟",
    "وش اغبى شيء سويته ؟",
    "تقدر تنام وخاطرك مكسور ؟",
    "اخر كلمة تقولها لو خلصت كلامك ؟",
    "وش معنى اسمك ؟",
    "اعلى نسبة جبتها بحياتك الدراسية ؟",
    "ردك المعتاد اذا أحد ناداك ؟",
    "شيء ودك تتركه ؟",
    "شيء مستحيل تمل منه ؟",
    "تجامل ولا صريح ؟",
    "لو بيدك توقف شيء يصير ، وش راح توقف ؟",
    "كم طولك ؟",
    "لو احتاج الشخص الي كسرك مساعدة بتوقف معه ؟",
    "اكتب شطر من اغنية او قصيدة جا فـ بالك ؟",
    "منشن : شخص تشوفه نفسية ؟",
    "كلمة لـ شخص عزيز عليك ؟",
    "فـ اي برنامج كنت قبل تجي التليقرام ؟",
    "تجامل احد على حساب مصلحتك ؟",
    "كمل : حلو يومك بـ وجود ...",
    "كيف تعبر عن عصبيتك ؟",
    "من الاشياء الي تجيب لك الصداع ؟",
    "متى تنام بالعادة ؟",
    "قبل امس الوقت هذا إيش كنت تسوي ؟",
    "حرف تحبه ؟",
    "تحب سوالف مين ؟",
    "كم نسبة الغيرة عندك من 10 ؟",# قناه المطور# قناه المطور https://t.me/M1telegramM1
    "كم وجبة تاكل فاليوم الفترة هذي؟",
    "كم عدد اللي معطيهم بلوك ؟",
    "وش اثقل مشوار ممكن تسويه ؟",
    "ترتيبك بالعائلة ؟",
    "وش اغبى شيء سويته ؟",
    "بتعمل اي دلوقتي ؟",
    "اخر حاجه كنت بتعملها ؟",
    "🗿منشن اكتر شخص انت شايف انه غبي ",
    "رقم تلفونك ؟",
    "اخر مكالمه مع مين ؟",
    "انا .. سيب الكيبورد يكمل ",
    "شايف ان البوت دا حلو ؟؟",
    "🙂✨كيف حالك ؟ ",
    "رمز تلفونك ؟",
    "اخر مره اكلت فيها ؟",
    "كم وزنك  ؟",
    "كم مره سامحت بقلبك بس عقلك رافض هالشيء ؟",
    "لو كنت شخصية كرتونية اي شخصية بتكون ؟",
    "شخص فرحتك مرتبطة فيه ؟",
    "جربت تروح اختبار بدون م تذاكر ؟",
    "وش تقول للشخص الي معك دائماً ف وقت ضيقتك ؟",
    "اشياء تغيرت نظرتك لها",
    "متى تحس بشعور حلو ؟",
    "وش اول طريقة تسويها اذا جيت تراضي شخص ؟",
    "اجمل مرحلة دراسية مرت عليك",
    "اذا كنت بنقاش مع شخص وطلع الحق معه تعترف له ولا تصر على كلامك ؟",
    "شخص تحب تنشبله ؟",
    "اكثر شيء تكرهه بالتليقرام؟"
        "ما هو حلمك الأكبر في الحياة؟",
    "لو كان لديك فرصة للعيش في أي بلد، أين ستختار؟",
    "ما هي أكثر تجربة غيرت فيك؟",
    "هل تؤمن بالحب من أول نظرة؟ ولماذا؟",
    "ما هو أكثر شيء يجعلك سعيدًا؟",
    "إذا كان بإمكانك العودة في الزمن، ما الفترة التي ستعود إليها؟",
    "ما هي أكثر عادة تحبها في نفسك؟",
    "كيف تتعامل مع الضغوطات؟",
    "من هو قدوتك في الحياة؟",
    "ما هو أكثر شيء تفتخر به؟",
    "هل تحب السفر؟ وما هي وجهتك المفضلة؟",
    "كيف تقيم علاقتك بأصدقائك؟",
    "ما هو الشيء الذي تخاف منه أكثر؟",
    "إذا كان لديك يوم كامل لتفعل ما تريد، ماذا ستفعل؟",
    "ما هو أكثر شيء تكرهه في نفسك؟",
    "ما هو أكثر شيء تحب أن تتعلمه؟",
    "هل تعتقد أن المال يشتري السعادة؟",
    "ما هو الشيء الذي ترغب في تغييره في العالم؟",
    "كيف تعبر عن مشاعرك؟",
    "ما هي أحلامك المهنية؟",
    "إذا كان لديك فرصة للقاء أي شخص تاريخي، من سيكون؟",
    "ما هي أكثر ذكرى جميلة في حياتك؟",
    "هل تفضل العزلة أم الاجتماعيات؟",
    "ما هو الشيء الذي يجعلك تشعر بالخوف؟",
    "كيف ترى نفسك بعد 10 سنوات؟",
    "ما هي أكثر لحظة محزنة في حياتك؟",
    "هل تؤمن بالقدر؟",
    "ما هي أفضل نصيحة تلقيتها في حياتك؟",
    "ما هو أكثر شيء تفعله عندما تكون سعيدًا؟",
    "إذا كان لديك خيار أن تكون مشهورًا، هل ستختار ذلك؟",
    "ما هي الصفة التي تتمنى أن تتملكها؟",
    "ما هي أكثر الأشياء التي تشتت انتباهك؟",
    "إذا كان لديك يوم آخر في حياتك، كيف ستقضيه؟",
    "ما هو الشيء الذي تحب أن تفعله في أوقات فراغك؟",
    "هل تفضل قراءة الكتب أم مشاهدة الأفلام؟",
    "ما هي أكبر مخاوفك في المستقبل؟",
    "كيف تصف نفسك في ثلاث كلمات؟",
    "ما هو أكثر شيء تحب أن تتحدث عنه؟",
    "إذا كان لديك 1 مليون دولار، ماذا ستفعل بها؟",
    "ما الذي يجعلك تشعر بالامتنان؟",
    "إذا كان لديك شخصية كرتونية كمثال، من ستختار؟",
    "ما هو أكثر شيء تحبه في عائلتك؟",
    "هل تفضل الصباح أم الليل؟ ولماذا؟",
    "ما هي عاداتك قبل النوم؟",
    "ما هي أفضل لحظة قضيتها مع أصدقائك؟",
    "ما هو الشيء الذي يجعلك تشعر بالفخر؟",
    "إذا كان بإمكانك تغيير شيء واحد في نفسك، ماذا سيكون؟",
    "كيف تتعامل مع الخسارة؟",
    "ما هي أكثر الأشياء التي تحبها في الحياة؟",
    "هل تؤمن بأن التغيير ممكن؟",
    "ما هو الشيء الذي ترغب في تحقيقه هذا العام؟",
    "كيف تصف يومك المثالي؟",
    "إذا كنت تستطيع إتقان مهارة جديدة، ما هي المهارة؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة؟",
    "ما هي أفضل ذكرياتك من المدرسة؟",
    "هل تحب المفاجآت؟",
    "ما هي أغنيتك المفضلة ولماذا؟",
    "إذا كان بإمكانك تناول العشاء مع أي شخص، من سيكون؟",
    "ما هو أكثر شيء تفعله للاسترخاء؟",
    "كيف تتعامل مع النقد؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب؟",
    "إذا كان لديك فرصة لتغيير شيء في حياتك، ماذا سيكون؟",
    "ما هو أكثر شيء تحب أن تفعله في عطلاتك؟",
    "كيف ترى المستقبل؟",
    "إذا كان لديك خيار أن تكون حيوانًا، أي حيوان ستختار؟",
    "ما هو أكثر شيء تحبه في طبيعتك؟",
    "كيف تصف صداقاتك؟",
    "ما هو أكبر إنجاز حققته حتى الآن؟",
    "ما الذي يجعلك تشعر بالقلق؟",
    "إذا كان لديك فرصة للسفر عبر الزمن، ماذا ستفعل؟",
    "ما هو أكثر شيء تود أن تفعله قبل أن تموت؟",
    "هل تؤمن بالحب الحقيقي؟",
    "ما هو الشيء الذي يجعلك تحب الحياة؟",
    "إذا كان لديك فرصة لتغيير العالم، ماذا ستفعل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
    "ما هي أكثر لحظة مضحكة حدثت لك؟",
    "إذا كان لديك فرصة لتجربة شيء جديد، ما الذي ستختاره؟",
    "ما هو أكثر شيء تتمنى أن تعرفه؟",
    "كيف تعبر عن نفسك من خلال الفن أو الكتابة؟",
    "ما هو الشيء الذي يجعلك تشعر بالنجاح؟",
    "إذا كان لديك فرصة للعمل في أي مجال، ماذا ستختار؟",
    "ما هي أكثر صفاتك إعجابًا في الآخرين؟",
    "ما هو أكبر تحدٍ واجهته وكيف تغلبت عليه؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز؟",
    "إذا كان لديك فرصة للعيش في قصة خيالية، أي قصة ستختار؟",
    "ما هو أكثر شيء يجعلك تشعر بالقلق في حياتك اليومية؟",
    "كيف تصف علاقتك بنفسك؟",
    "ما هو أكثر شيء تحب أن تفعله مع عائلتك؟",
    "إذا كان لديك فرصة لتغيير شيء في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والاهتمام؟",
    "كيف تتعامل مع الصعوبات؟",
    "ما هو أكثر شيء يجعلك تشعر بالامتنان؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة؟",
    "كيف تصف مشاعرك تجاه النجاح؟",
    "ما هي أكثر الأشياء التي تتمنى تحقيقها في الحياة؟",
    "إذا كان لديك فرصة لخوض تجربة جديدة، ما هي التجربة؟",
    "ما هو الشيء الذي يجعلك تشعر بأنك على قيد الحياة؟",
    "كيف تتعامل مع الضغوطات في حياتك؟",
    "ما هو أكثر شيء يسبب لك القلق؟",
    "إذا كان لديك فرصة لتغيير شيء في ماضيك، ماذا سيكون؟",
    "ما هي أكثر اللحظات التي تجعلك تشعر بالفخر؟",
    "كيف ترى نفسك في المستقبل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
    "إذا كان لديك فرصة لتحقيق حلمك، ما هو الحلم؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحدي؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز؟",
    "إذا كان لديك فرصة لتجربة شيء جديد، ماذا ستختار؟",
    "ما هو أكثر شيء يجعلك تشعر بالقلق في حياتك اليومية؟",
    "كيف تصف علاقتك بنفسك؟",
    "ما هو أكثر شيء تحب أن تفعله مع عائلتك؟",
    "إذا كان لديك فرصة لتغيير شيء في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والاهتمام؟",
    "كيف تتعامل مع الصعوبات؟",
    "ما هو أكثر شيء يجعلك تشعر بالامتنان؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة؟",
    "كيف تصف مشاعرك تجاه النجاح؟",
    "ما هي أكثر الأشياء التي تتمنى تحقيقها في الحياة؟",
    "إذا كان لديك فرصة لخوض تجربة جديدة، ما هي التجربة؟",
    "ما هو الشيء الذي يجعلك تشعر بأنك على قيد الحياة؟",
    "كيف تتعامل مع الضغوطات في حياتك؟",
    "ما هو أكثر شيء يسبب لك القلق؟",
    "إذا كان لديك فرصة لتغيير شيء في ماضيك، ماذا سيكون؟",
    "ما هي أكثر اللحظات التي تجعلك تشعر بالفخر؟",
    "كيف ترى نفسك في المستقبل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
    "إذا كان لديك فرصة لتحقيق حلمك، ما هو الحلم؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحدي؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز؟",
    "إذا كان لديك فرصة للتحدث مع أي شخص في العالم، من سيكون؟",
    "ما هو الشيء الذي تبحث عنه في شريك حياتك؟",
    "كيف تصف علاقتك بأحبائك؟",
    "ما هو أكثر شيء تعلمته من الحياة؟",
    "إذا كان لديك فرصة لتغيير شيء في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والاهتمام؟",
    "كيف تتعامل مع الصعوبات؟",
    "ما هو أكثر شيء يجعلك تشعر بالامتنان؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة؟",
    "كيف تصف مشاعرك تجاه النجاح؟",
    "ما هي أكثر الأشياء التي تتمنى تحقيقها في الحياة؟",
    "إذا كان لديك فرصة لخوض تجربة جديدة، ما هي التجربة؟",
    "ما هو الشيء الذي يجعلك تشعر بأنك على قيد الحياة؟",
    "كيف تتعامل مع الضغوطات في حياتك؟",
    "ما هو أكثر شيء يسبب لك القلق؟",
    "إذا كان لديك فرصة لتغيير شيء في ماضيك، ماذا سيكون؟",
    "ما هي أكثر اللحظات التي تجعلك تشعر بالفخر؟",
    "كيف ترى نفسك في المستقبل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
        "ما هو هدفك في الحياة الذي تسعى لتحقيقه؟",
    "إذا كان بإمكانك اختيار أي مهنة، ماذا ستختار؟",
    "ما هو الشيء الذي تفتخر به في حياتك؟",
    "ما هي أكثر تجربة غيرت نظرتك للحياة؟",
    "هل تؤمن بالحب من أول نظرة؟ ولماذا؟",
    "ما هو أكثر شيء يجعلك سعيدًا في الحياة؟",
    "إذا كان بإمكانك العودة في الزمن، إلى أي فترة ستعود؟",
    "ما هي العادة التي تود تغييرها في نفسك؟",
    "كيف تتعامل مع التوتر في حياتك؟",
    "من هو الشخص الذي تعتبره قدوة لك؟",
    "ما هي أفضل نصيحة تلقيتها في حياتك؟",
    "إذا كان لديك يوم كامل لتفعل ما تريد، ماذا ستفعل؟",
    "ما هو أكثر شيء تكرهه في نفسك؟",
    "ما هو الشيء الذي ترغب في تعلمه؟",
    "هل تعتقد أن المال يمكن أن يشتري السعادة؟",
    "ما هو الشيء الذي تود تغييره في العالم؟",
    "كيف تعبر عن مشاعرك تجاه الآخرين؟",
    "ما هي الأحلام التي ترغب في تحقيقها؟",
    "إذا كان لديك فرصة للقاء أي شخصية تاريخية، من سيكون؟",
    "ما هي أفضل ذكرى لديك من طفولتك؟",
    "هل تفضل العزلة أم التواجد مع الآخرين؟ ولماذا؟",
    "ما هو الشيء الذي يجعلك تشعر بالخوف؟",
    "كيف ترى نفسك بعد 10 سنوات؟",
    "ما هي أكثر لحظة محزنة في حياتك؟",
    "هل تؤمن بالقدر؟",
    "ما هي الأشياء التي تجعلك تشعر بالامتنان؟",
    "ما هو أكثر شيء يجعلك سعيدًا في العمل؟",
    "إذا كان لديك فرصة للعيش في أي مكان، أين سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة؟",
    "كيف تتعامل مع النقد؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب؟",
    "إذا كان بإمكانك تغيير شيء واحد في ماضيك، ماذا سيكون؟",
    "ما هو أكثر شيء تفعله لتخفيف التوتر؟",
    "ما هو أكثر شيء يجعلك تشعر بالفخر؟",
    "إذا كان لديك شخصية كرتونية كمثال، من ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والاهتمام؟",
    "كيف تصف صداقاتك؟",
    "ما هو أكبر إنجاز حققته حتى الآن؟",
    "ما الذي يجعلك تشعر بالقلق؟",
    "إذا كان لديك فرصة للسفر عبر الزمن، ماذا ستفعل؟",
    "ما هو أكثر شيء تود أن تفعله قبل أن تموت؟",
    "هل تؤمن بالحب الحقيقي؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة؟",
    "إذا كان لديك فرصة لتغيير العالم، ماذا ستفعل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
    "ما هي أكثر لحظة مضحكة حدثت لك؟",
    "إذا كان لديك فرصة لتجربة شيء جديد، ما هي التجربة؟",
    "ما هو أكثر شيء تود معرفته عن نفسك؟",
    "كيف تعبر عن نفسك من خلال الكتابة أو الفن؟",
    "ما هو الشيء الذي يجعلك تشعر بالنجاح؟",
    "إذا كان لديك فرصة للعمل في أي مجال، ماذا ستختار؟",
    "ما هي أكثر الصفات التي تعجبك في الناس؟",
    "ما هو أكبر تحدٍ واجهته وكيف تغلبت عليه؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز؟",
    "إذا كان لديك فرصة لتجربة حياة شخص آخر، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالقلق في حياتك اليومية؟",
    "كيف تصف علاقتك بنفسك؟",
    "ما هو أكثر شيء تحب أن تفعله مع أصدقائك؟",
    "إذا كان لديك فرصة لتغيير شيء في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والاهتمام؟",
    "كيف تتعامل مع الصعوبات؟",
    "ما هو أكثر شيء يجعلك تشعر بالامتنان؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة؟",
    "كيف تصف مشاعرك تجاه النجاح؟",
    "ما هي أكثر الأشياء التي تتمنى تحقيقها في الحياة؟",
    "إذا كان لديك فرصة لخوض تجربة جديدة، ما هي التجربة؟",
    "ما هو الشيء الذي يجعلك تشعر بأنك على قيد الحياة؟",
    "كيف تتعامل مع الضغوطات في حياتك؟",
    "ما هو أكثر شيء يسبب لك القلق؟",
    "إذا كان لديك فرصة لتغيير شيء في ماضيك، ماذا سيكون؟",
    "ما هي أكثر اللحظات التي تجعلك تشعر بالفخر؟",
    "كيف ترى نفسك في المستقبل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
    "إذا كان لديك فرصة لتحقيق حلمك، ما هو الحلم؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحدي؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز؟",
    "إذا كان لديك فرصة للتحدث مع أي شخص في العالم، من سيكون؟",
    "ما هو الشيء الذي تبحث عنه في شريك حياتك؟",
    "كيف تصف علاقتك بأحبائك؟",
    "ما هو أكثر شيء تعلمته من الحياة؟",
    "إذا كان لديك فرصة لتغيير شيء في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والاهتمام؟",
    "كيف تتعامل مع الصعوبات؟",
    "ما هو أكثر شيء يجعلك تشعر بالامتنان؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة؟",
    "كيف تصف مشاعرك تجاه النجاح؟",
    "ما هي أكثر الأشياء التي تتمنى تحقيقها في الحياة؟",
    "إذا كان لديك فرصة لخوض تجربة جديدة، ما هي التجربة؟",
    "ما هو الشيء الذي يجعلك تشعر بأنك على قيد الحياة؟",
    "كيف تتعامل مع الضغوطات في حياتك؟",
    "ما هو أكثر شيء يسبب لك القلق؟",
    "إذا كان لديك فرصة لتغيير شيء في ماضيك، ماذا سيكون؟",
    "ما هي أكثر اللحظات التي تجعلك تشعر بالفخر؟",
    "كيف ترى نفسك في المستقبل؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الأوقات الصعبة؟",
    "إذا كان لديك فرصة لتحقيق حلمك، ما هو الحلم؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحدي؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز؟",
    "إذا كان لديك فرصة لتجربة شيء جديد، ماذا ستختار؟",
    "ما هي أكثر الأشياء التي تحب أن تفعلها في عطلتك؟",
    "ما هو أكبر قرار اتخذته في حياتك؟",
    "كيف تصف علاقتك بمحيطك؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة في الصباح؟",
    "إذا كان لديك فرصة لتغيير شيء واحد في حياتك، ماذا سيكون؟",
    "ما هو أفضل شيء تعلمته من عائلتك؟",
    "ما هو الشيء الذي يجعلك تشعر بالقلق في العلاقات؟",
    "كيف تتعامل مع الفشل في العمل؟",
    "ما هو أكثر شيء يجعلك تشعر بالتوتر؟",
    "إذا كان لديك فرصة للسفر إلى الفضاء، هل ستفعل؟",
    "ما هو الشيء الذي يجعلك تشعر بالامتنان في الصباح؟",
    "كيف تصف يومك المثالي؟",
    "ما هو الشيء الذي يجعلك تشعر بالفخر في عائلتك؟",
    "إذا كان لديك فرصة للعيش في أي بلد، أين سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة في العمل؟",
    "كيف تتعامل مع الضغوطات في العمل؟",
    "ما هو أكثر شيء تود معرفته عن مستقبل البشرية؟",
    "إذا كان لديك فرصة للعيش في أي قصة خيالية، أي قصة ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة عندما تكون في حالة ضغط؟",
    "كيف تصف علاقتك بالموسيقى؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب في حياتك اليومية؟",
    "إذا كان لديك فرصة لتغيير وظيفة واحدة في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالقلق عندما تفكر فيه؟",
    "كيف تتعامل مع الصعوبات في الحياة؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحدي في العمل؟",
    "إذا كان لديك فرصة لتجربة حياة أي شخصية مشهورة، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة عندما تفكر فيه؟",
    "كيف تصف علاقتك بالطبيعة؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب والتقدير؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالامتنان عندما تكون في صعوبة؟",
    "كيف تتعامل مع الخسارة؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحفيز في حياتك؟",
    "إذا كان لديك فرصة لتغيير شيء واحد في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة عندما تفكر فيه؟",
    "كيف تصف علاقتك بالإنترنت؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب عندما تراه؟",
    "إذا كان لديك فرصة لتغيير شيء في ماضيك، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالقلق عندما تفكر فيه؟",
    "كيف تتعامل مع الضغوطات في الحياة؟",
    "ما هو أكثر شيء يجعلك تشعر بالفخر في حياتك؟",
    "كيف تصف يومك المثالي؟",
    "ما هو الشيء الذي يجعلك تشعر بالفخر في عائلتك؟",
    "إذا كان لديك فرصة للعيش في أي بلد، أين سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة في العمل؟",
    "كيف تتعامل مع الضغوطات في العمل؟",
    "ما هو أكثر شيء تود معرفته عن مستقبل البشرية؟",
    "إذا كان لديك فرصة للعيش في أي قصة خيالية، أي قصة ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة عندما تكون في حالة ضغط؟",
    "كيف تصف علاقتك بالموسيقى؟",
    "ما هو الشيء الذي يجعلك تشعر بالحب في حياتك اليومية؟",
    "إذا كان لديك فرصة لتغيير وظيفة واحدة في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالقلق عندما تفكر فيه؟",
    "كيف تتعامل مع الصعوبات في الحياة؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحدي في العمل؟",
    "إذا كان لديك فرصة لتجربة حياة أي شخصية مشهورة، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة عندما تفكر فيه؟",
    "كيف تصف علاقتك بالطبيعة؟",
    "ما هو الشيء الذي يجعلك تشعر بالتقدير؟",
    "إذا كان لديك فرصة للعيش في أي زمن، أي زمن ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالامتنان عندما تكون في صعوبة؟",
    "كيف تتعامل مع الخسارة؟",
    "ما هو أكثر شيء يجعلك تشعر بالتحفيز في حياتك؟",
    "إذا كان لديك فرصة لتغيير شيء واحد في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة عندما تفكر فيه؟",
    "كيف تصف علاقتك بالتكنولوجيا؟",
    "ما هو الشيء الذي يجعلك تشعر بالفخر عندما تفعله؟",
    "إذا كان لديك فرصة لتعلم مهارة جديدة، ما هي المهارة التي ستختارها؟",
    "ما هو أكثر شيء يجعلك تشعر بالراحة في المساء؟",
    "كيف تصف علاقتك بالقراءة؟",
    "ما هو الشيء الذي يجعلك تشعر بالنشاط في الصباح؟",
    "إذا كان لديك فرصة للذهاب في رحلة مغامرة، إلى أين ستذهب؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحدي في دراستك؟",
    "كيف تتعامل مع الانتقادات؟",
    "ما هو أكثر شيء يجعلك تشعر بالإنجاز في حياتك؟",
    "إذا كان لديك فرصة للتحدث مع أي شخص في التاريخ، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالهدوء؟",
    "كيف تصف علاقتك بالأسرة؟",
    "ما هو الشيء الذي يجعلك تشعر بالفضول؟",
    "إذا كان لديك فرصة لتغيير شيء في حياتك، ماذا سيكون؟",
    "ما هو أكثر شيء يجعلك تشعر بالفخر في دراستك؟",
    "كيف تتعامل مع التحديات اليومية؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز عندما تستيقظ؟",
    "إذا كان لديك فرصة لإجراء تجربة علمية، ما هي التجربة التي ستختارها؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في عطلاتك؟",
    "كيف تصف علاقتك بالرياضة؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة عند تحقيقه؟",
    "إذا كان لديك فرصة للتطوع في أي منظمة، أين ستذهب؟",
    "ما هو الشيء الذي يجعلك تشعر بالاسترخاء بعد يوم طويل؟",
    "كيف تتعامل مع الأوقات الصعبة؟",
    "ما هو أكثر شيء يجعلك تشعر بالمسؤولية؟",
    "إذا كان لديك فرصة لمقابلة عالم مشهور، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالإنجاز في عملك؟",
    "كيف تصف علاقتك بالأصدقاء؟",
    "ما هو الشيء الذي يجعلك تشعر بالاستكشاف؟",
    "إذا كان لديك فرصة للسفر عبر الزمن، إلى أي زمن ستذهب؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحدي في الحياة اليومية؟",
    "كيف تتعامل مع الفشل؟",
    "ما هو أكثر شيء يجعلك تشعر بالسعادة في عطلتك؟",
    "إذا كان لديك فرصة لتجربة طعام جديد، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالفضول تجاه العلوم؟",
    "كيف تصف علاقتك بالفنون؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز في المساء؟",
    "إذا كان لديك فرصة لتغيير شيء في العالم، ماذا سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة عندما تكون بمفردك؟",
    "كيف تتعامل مع الأوقات العصيبة؟",
    "ما هو أكثر شيء يجعلك تشعر بالاستقرار في حياتك؟",
    "إذا كان لديك فرصة لتجربة حياة أي شخصية خيالية، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة عندما تنجح فيه؟",
    "كيف تصف علاقتك بالعمل الجماعي؟",
    "ما هو الشيء الذي يجعلك تشعر بالأمان في حياتك؟",
    "إذا كان لديك فرصة للعيش في مكان جديد، أين سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالامتنان في حياتك اليومية؟",
    "كيف تتعامل مع الضغوطات الدراسية؟",
    "ما هو أكثر شيء يجعلك تشعر بالفخر في مهنتك؟",
    "إذا كان لديك فرصة للتحدث مع أي شخصية تاريخية، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالهدوء في المنزل؟",
    "كيف تصف علاقتك بالنجاح؟",
    "ما هو الشيء الذي يجعلك تشعر بالنشاط في منتصف اليوم؟",
    "إذا كان لديك فرصة للذهاب إلى أي مهرجان ثقافي، أي مهرجان ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحدي في حياتك الشخصية؟",
    "كيف تتعامل مع الأشياء غير المتوقعة؟",
    "ما هو أكثر شيء يجعلك تشعر بالإنجاز في مشروعك؟",
    "إذا كان لديك فرصة لمقابلة كاتب مشهور، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الهواء الطلق؟",
    "كيف تصف علاقتك بالعلوم؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحفيز عند العمل؟",
    "إذا كان لديك فرصة لتجربة هواية جديدة، ما هي الهواية التي ستختارها؟",
    "ما هو الشيء الذي يجعلك تشعر بالاسترخاء في نهاية الأسبوع؟",
    "كيف تتعامل مع المشاكل العائلية؟",
    "ما هو أكثر شيء يجعلك تشعر بالاستقرار في عملك؟",
    "إذا كان لديك فرصة لمقابلة فنان مشهور، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالفضول تجاه العالم؟",
    "كيف تصف علاقتك بالتغيير؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة في نهاية اليوم؟",
    "إذا كان لديك فرصة للعيش في أي مدينة، أين سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحدي في تعلّم شيء جديد؟",
    "كيف تتعامل مع الأزمات؟",
    "ما هو أكثر شيء يجعلك تشعر بالإنجاز في حياتك الاجتماعية؟",
    "إذا كان لديك فرصة لتجربة نشاط خارجي، ما هو النشاط الذي ستختاره؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في الصباح؟",
    "كيف تصف علاقتك بالفشل؟",
    "ما هو الشيء الذي يجعلك تشعر بالإلهام في حياتك؟",
    "إذا كان لديك فرصة للعيش في أي ثقافة، أي ثقافة ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالامتنان في عملك؟",
    "كيف تتعامل مع الضغوطات الأسرية؟",
    "ما هو أكثر شيء يجعلك تشعر بالفخر في مجتمعك؟",
    "إذا كان لديك فرصة للتحدث مع أي عالم، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالهدوء في الطبيعة؟",
    "كيف تصف علاقتك بالتحديات؟",
    "ما هو الشيء الذي يجعلك تشعر بالنشاط في فترة الظهيرة؟",
    "إذا كان لديك فرصة للذهاب إلى أي مكان في العالم، أين سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحدي في التعامل مع الناس؟",
    "كيف تتعامل مع مشاعر الإحباط؟",
    "ما هو أكثر شيء يجعلك تشعر بالإنجاز في حياتك العائلية؟",
    "إذا كان لديك فرصة لمقابلة شخصية رياضية، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة في بيئة العمل؟",
    "كيف تصف علاقتك بالمغامرة؟",
    "ما هو الشيء الذي يجعلك تشعر بالتقدير في حياتك اليومية؟",
    "إذا كان لديك فرصة لتجربة شيء غير مألوف، ما هو الشيء الذي ستختاره؟",
    "ما هو الشيء الذي يجعلك تشعر بالاسترخاء في الطبيعة؟",
    "كيف تتعامل مع التوتر في حياتك؟",
    "ما هو أكثر شيء يجعلك تشعر بالفخر في إنجازاتك؟",
    "إذا كان لديك فرصة للعيش في أي حقبة تاريخية، أي حقبة ستختار؟",
    "ما هو الشيء الذي يجعلك تشعر بالسعادة في عطلتك؟",
    "كيف تصف علاقتك بالمخاطر؟",
    "ما هو الشيء الذي يجعلك تشعر بالتحدي في العمل الجماعي؟",
    "إذا كان لديك فرصة لتجربة نشاط رياضي جديد، ما هو النشاط الذي ستختاره؟",
    "ما هو الشيء الذي يجعلك تشعر بالراحة عندما تجلس بمفردك؟",
    "كيف تتعامل مع الانتقادات في حياتك؟",
    "ما هو أكثر شيء يجعلك تشعر بالإنجاز في تربية أطفالك؟",
    "إذا كان لديك فرصة لمقابلة شخصية سياسية، من سيكون؟",
    "ما هو الشيء الذي يجعلك تشعر بالهدوء في المنزل؟",
    "كيف تصف علاقتك بالحياة؟",
    "ما هو الشيء الذي يجعلك تشعر بالنشاط في بداية يومك؟",
    "إذا كان لديك فرصة لحضور أي حدث ثقافي، أي حدث ستختار؟"
    
]


@bot.message_handler(func=lambda message: message.text.lower() in ["فكك", "تفكيك", "لعبه فكك"])
def start_break_game(message):
    word = random.choice(list(word_dict.keys()))
    current_word = word_dict[word]
    start_times[message.from_user.id] = time.time()
    game_active[message.from_user.id] = word
    
    formatted_word = f"فكك ↢ ( {word} )"
    bot.send_message(message.chat.id, formatted_word)

@bot.message_handler(func=lambda m: m.from_user.id in game_active)
def check_break_answer(answer_message):
    user_id = answer_message.from_user.id

    if user_id in start_times:
        elapsed_time = time.time() - start_times[user_id]
        
        user_answer = answer_message.text.strip()
        original_word = game_active[user_id]
        correct_answer = word_dict[original_word]

        if user_answer == correct_answer:
            user_points[user_id] += 30
            elapsed_time_str = f"{elapsed_time:.2f} ثانية"
            
            bot.send_message(answer_message.chat.id, 
                             f"اجابتك صحيحة ✔️\n"
                             f"⏰ الوقت: {elapsed_time_str}\n"
                             f"💸 فلوسك: {user_points[user_id]} ريال\n"
                             f"༄")
        else:
            bot.send_message(answer_message.chat.id, "اجابتك خاطئة ❌") 

    if user_id in game_active:
        del game_active[user_id]




# قاموس الكلمات ومعانيها
dictionary = {
    "street": "شارع",
    "book": "كتاب",
    "computer": "حاسوب",
    "apple": "تفاحة",
    "car": "سيارة",
    "house": "منزل",
    "dog": "كلب",
    "cat": "قطة",
    "tree": "شجرة",
    "flower": "زهرة",
    "water": "ماء",
    "food": "طعام",
    "friend": "صديق",
    "school": "مدرسة",
    "teacher": "معلم",
    "student": "طالب",
    "city": "مدينة",
    "country": "بلد",
    "family": "عائلة",
    "music": "موسيقى",
    "dance": "رقص",
    "love": "حب",
    "sun": "شمس",
    "moon": "قمر",
    "star": "نجمة",
    "night": "ليلة",
    "day": "يوم",
    "light": "ضوء",
    "dark": "ظلام",
    "sky": "سماء",
    "earth": "أرض",
    "wind": "ريح",
    "fire": "نار",
    "mountain": "جبل",
    "river": "نهر",
    "ocean": "محيط",
    "beach": "شاطئ",
    "island": "جزيرة",
    "desert": "صحراء",
    "forest": "غابة",
    "rain": "مطر",
    "snow": "ثلج",
    "cloud": "سحاب",
    "weather": "طقس",
    "clothes": "ملابس",
    "shoe": "حذاء",
    "hat": "قبعة",
    "bag": "حقيبة",
    "phone": "هاتف",
    "computer": "حاسوب",
    "internet": "إنترنت",
    "television": "تلفاز",
    "movie": "فيلم",
    "game": "لعبة",
    "sport": "رياضة",
    "play": "لعب",
    "bookstore": "مكتبة",
    "library": "مكتبة",
    "market": "سوق",
    "shop": "متجر",
    "money": "مال",
    "coin": "عملة",
    "credit": "ائتمان",
    "debt": "دين",
    "job": "وظيفة",
    "work": "عمل",
    "business": "عمل",
    "company": "شركة",
    "office": "مكتب",
    "meeting": "اجتماع",
    "contract": "عقد",
    "project": "مشروع",
    "goal": "هدف",
    "plan": "خطة",
    "success": "نجاح",
    "failure": "فشل",
    "health": "صحة",
    "doctor": "طبيب",
    "hospital": "مستشفى",
    "medicine": "دواء",
    "treatment": "علاج",
    "sickness": "مرض",
    "patient": "مريض",
    "family": "عائلة",
    "child": "طفل",
    "old": "قديم",
    "young": "شاب",
    "happy": "سعيد",
    "sad": "حزين",
    "angry": "غاضب",
    "afraid": "خائف",
    "surprised": "مفاجئ",
    "bored": "ممل",
    "tired": "متعب",
    "excited": "متحمس",
    "interested": "مهتم",
    "funny": "مضحك",
    "serious": "جاد",
    "easy": "سهل",
    "difficult": "صعب",
    "simple": "بسيط",
    "complicated": "معقد",
    "fast": "سريع",
    "slow": "بطيء",
    "big": "كبير",
    "small": "صغير",
    "long": "طويل",
    "short": "قصير",
    "heavy": "ثقيل",
    "light": "خفيف",
    "rich": "غني",
    "poor": "فقير",
    "beautiful": "جميل",
    "ugly": "قبيح",
    "clean": "نظيف",
    "dirty": "متسخ",
    "new": "جديد",
    "old": "قديم",
    "hot": "حار",
    "cold": "بارد",
    "sweet": "حلو",
    "sour": "حامض",
    "bitter": "مر",
    "salty": "مالح"
}


word_dict = {

    "بوق": "ب و ق",
    "كتاب": "ك ت ا ب",
    "حاسوب": "ح ا س و ب",
    "تفاحة": "ت ف ا ح ة",
    "شجرة": "ش ج ر ة",
    "قلم": "ق ل م",
    "باب": "ب ا ب",
    "هاتف": "ه ا ت ف",
    "شباك": "ش ب ا ك",
    "بيت": "ب ي ت",
    "قطار": "ق ط ا ر",
    "دراجة": "د ر ا ج ة",
    "سفينة": "س ف ي ن ة",
    "طائرة": "ط ا ئ ر ة",
    "ساعة": "س ا ع ة",
    "مكتب": "م ك ت ب",
    "كرسي": "ك ر س ي",
    "طاولة": "ط ا و ل ة",
    "سيارة": "س ي ا ر ة",
    "مفتاح": "م ف ت ا ح",
    "مصباح": "م ص ب ا ح",
    "حقيبة": "ح ق ي ب ة",
    "زجاجة": "ز ج ا ج ة",
    "شمس": "ش م س",
    "قمر": "ق م ر",
    "نجمة": "ن ج م ة",
    "سماء": "س م ا ء",
    "أرض": "أ ر ض",
    "بحر": "ب ح ر",
    "نهر": "ن ه ر",
    "جبل": "ج ب ل",
    "وادي": "و ا د ي",
    "غابة": "غ ا ب ة",
    "صحيفة": "ص ح ي ف ة",
    "مجلة": "م ج ل ة",
    "راديو": "ر ا د ي و",
    "تلفاز": "ت ل ف ا ز",
    "ثلاجة": "ث ل ا ج ة",
    "فرن": "ف ر ن",
    "مكيف": "م ك ي ف",
    "سرير": "س ر ي ر",
    "بطانية": "ب ط ا ن ي ة",
    "وسادة": "و س ا د ة",
    "سجادة": "س ج ا د ة",
    "خزانة": "خ ز ا ن ة",
    "نافذة": "ن ا ف ذ ة",
    "حديقة": "ح د ي ق ة",
    "زهرة": "ز ه ر ة",
    "وردة": "و ر د ة",
    "نبتة": "ن ب ت ة",
    "فاكهة": "ف ا ك ه ة",
    "خضار": "خ ض ا ر",
    "طعام": "ط ع ا م",
    "ماء": "م ا ء",
    "حليب": "ح ل ي ب",
    "عصير": "ع ص ي ر",
    "قهوة": "ق ه و ة",
    "شاي": "ش ا ي",
    "خبز": "خ ب ز",
    "أرز": "أ ر ز",
    "سكر": "س ك ر",
    "ملح": "م ل ح",
    "دجاج": "د ج ا ج",
    "لحم": "ل ح م",
    "سمك": "س م ك",
    "بيض": "ب ي ض",
    "جبن": "ج ب ن",
    "زبدة": "ز ب د ة",
    "فلفل": "ف ل ف ل",
    "ثوم": "ث و م",
    "بصل": "ب ص ل",
    "بندورة": "ب ن د و ر ة",
    "خيار": "خ ي ا ر",
    "جزر": "ج ز ر",
    "بطاطس": "ب ط ا ط س",
    "فراولة": "ف ر ا و ل ة",
    "عنب": "ع ن ب",
    "تفاح": "ت ف ا ح",
    "برتقال": "ب ر ت ق ا ل",
    "موز": "م و ز",
    "رمان": "ر م ا ن",
    "بطيخ": "ب ط ي خ",
    "شمام": "ش م ا م",
    "خوخ": "خ و خ",
    "مشمش": "م ش م ش",
    "كرز": "ك ر ز",
    "أناناس": "أ ن ا ن ا س",
    "مانجو": "م ا ن ج و",
    "ليمون": "ل ي م و ن",
    "أفوكادو": "أ ف و ك ا د و",
    "بندق": "ب ن د ق",
    "جوز": "ج و ز",
    "لوز": "ل و ز",
    "فستق": "ف س ت ق",
    "تمر": "ت م ر",
    "زيتون": "ز ي ت و ن",
    "عسل": "ع س ل",
    "طحين": "ط ح ي ن",
    "معكرونة": "م ع ك ر و ن ة",
    "بيتزا": "ب ي ت ز ا",
    "شوكولاتة": "ش و ك و ل ا ت ة",
    "بسكويت": "ب س ك و ي ت",
    "كعك": "ك ع ك",
    "أيس كريم": "أ ي س ك ر ي م",
    "كوكيز": "ك و ك ي ز",
    "فانيليا": "ف ا ن ي ل ي ا",
    "كابتشينو": "ك ا ب ت ش ي ن و",
    "لاتيه": "ل ا ت ي ه",
    "مكرونة": "م ك ر و ن ة",
    "شوربة": "ش و ر ب ة",
    "بسكويت": "ب س ك و ي ت",
    "عجة": "ع ج ة",
    "فلافل": "ف ل ا ف ل",
    "كبة": "ك ب ة",
    "حساء": "ح س ا ء",
    "عدس": "ع د س",
    "حمص": "ح م ص",
    "فول": "ف و ل",
    "سلطة": "س ل ط ة",
    "مايونيز": "م ا ي و ن ي ز",
    "كاتشب": "ك ا ت ش ب",
    "خردل": "خ ر د ل",
    "علكة": "ع ل ك ة",
    "حلويات": "ح ل و ي ا ت",
    "مخبوزات": "م خ ب و ز ا ت",
    "عطر": "ع ط ر",
    "شامبو": "ش ا م ب و",
    "صابون": "ص ا ب و ن",
    "معجون": "م ع ج و ن",
    "فرشاة": "ف ر ش ا ة",
    "مقص": "م ق ص",
    "مكواة": "م ك و ا ة",
    "غسالة": "غ س ا ل ة",
    "ثياب": "ث ي ا ب",
    "ملابس": "م ل ا ب س",
    "حذاء": "ح ذ ا ء",
    "جوارب": "ج و ا ر ب",
    "قبعة": "ق ب ع ة",
    "نظارة": "ن ظ ا ر ة",
    "ساعة": "س ا ع ة",
    "محفظة": "م ح ف ظ ة",
    "حزام": "ح ز ا م",
    "قميص": "ق م ي ص",
    "بنطال": "ب ن ط ا ل",
    "جاكيت": "ج ا ك ي ت",
    "معطف": "م ع ط ف",
    "وشاح": "و ش ا ح",
    "قفل": "ق ف ل",
    "مسمار": "م س م ا ر",
    "مطرقة": "م ط ر ق ة",
    "مفك": "م ف ك",
    "كماشة": "ك م ا ش ة",
    "مبرد": "م ب ر د",
    "منشار": "م ن ش ا ر",
    "مقص": "م ق ص",
    "سلك": "س ل ك",
    "حبل": "ح ب ل",
    "كرسي": "ك ر س ي",
    "أريكة": "أ ر ي ك ة",
    "ثلاجة": "ث ل ا ج ة",
    "فرن": "ف ر ن",
    "غسالة": "غ س ا ل ة",
    "ميكروويف": "م ي ك ر و و ي ف",
    "خلاط": "خ ل ا ط",
    "مروحة": "م ر و ح ة",
    "مكيف": "م ك ي ف",
    "محمصة": "م ح م ص ة",
    "كهرباء": "ك ه ر ب ا ء",
    "ضوء": "ض و ء",
    "بطارية": "ب ط ا ر ي ة",
    "محرك": "م ح ر ك",
    "عجلة": "ع ج ل ة",
    "قطعة": "ق ط ع ة",
    "ورق": "و ر ق",
    "قلم": "ق ل م",
    "حبر": "ح ب ر",
    "مسطرة": "م س ط ر ة",
    "ممحاة": "م م ح ا ة",
    "لوحة": "ل و ح ة",
    "خريطة": "خ ر ي ط ة",
    "دفتر": "د ف ت ر",
    "كتاب": "ك ت ا ب",
    "مجلد": "م ج ل د",
    "حقيبة": "ح ق ي ب ة",
    "نملة": "ن م ل ة",
    "أسد": "أ س د",
    "فيل": "ف ي ل",
    "حصان": "ح ص ا ن",
    "غزال": "غ ز ا ل",
    "ذئب": "ذ ئ ب",
    "ثعلب": "ث ع ل ب",
    "دب": "د ب",
    "فأر": "ف أ ر",
    "نسر": "ن س ر",
    "حمامة": "ح م ا م ة",
    "ببغاء": "ب ب غ ا ء",
    "عصفور": "ع ص ف و ر",
    "غراب": "غ ر ا ب",
    "تمساح": "ت م س ا ح",
    "سلحفاة": "س ل ح ف ا ة",
    "قرد": "ق ر د",
    "أرنب": "أ ر ن ب",
    "بقرة": "ب ق ر ة",
    "دجاجة": "د ج ا ج ة",
    "خروف": "خ ر و ف",
    "ماعز": "م ا ع ز",
    "جمل": "ج م ل",
    "بطة": "ب ط ة",
    "وزة": "و ز ة",
    "ثعبان": "ث ع ب ا ن",
    "ضفدع": "ض ف د ع",
    "سمكة": "س م ك ة",
    "قرش": "ق ر ش",
    "حوت": "ح و ت",
    "دلفين": "د ل ف ي ن",
    "أخطبوط": "أ خ ط ب و ط",
    "حصان بحر": "ح ص ا ن ب ح ر",
    "عقرب": "ع ق ر ب",
    "صرصور": "ص ر ص و ر",
    "نحلة": "ن ح ل ة",
    "فراشة": "ف ر ا ش ة",
    "ذباب": "ذ ب ا ب",
    "جرادة": "ج ر ا د ة",
    "بعوضة": "ب ع و ض ة",
    "نورس": "ن و ر س",
    "نمر": "ن م ر",
    "عنكبوت": "ع ن ك ب و ت",
    "حلزون": "ح ل ز و ن",
    "بقرة وحشية": "ب ق ر ة و ح ش ي ة",
    "بومة": "ب و م ة",
    "خفاش": "خ ف ا ش",
    "جندب": "ج ن د ب",
    "يعسوب": "ي ع س و ب",
    "سرطان": "س ر ط ا ن",
    "دودة": "د و د ة",
    "أيل": "أ ي ل",
    "ضبع": "ض ب ع",
    "نملة بيضاء": "ن م ل ة ب ي ض ا ء",
    "ورل": "و ر ل",
    "حرباء": "ح ر ب ا ء",
    "سنجاب": "س ن ج ا ب",
    "زرافة": "ز ر ا ف ة",
    "طيور": "ط ي و ر",
    "سمان": "س م ا ن",
    "كنغر": "ك ن غ ر",
    "باندا": "ب ا ن د ا",
    "فهد": "ف ه د",
    "قنفذ": "ق ن ف ذ",
    "سحلية": "س ح ل ي ة",
    "عقاب": "ع ق ا ب",
    "صقر": "ص ق ر",
    "مها": "م ه ا",
    "نعامة": "ن ع ا م ة",
    "زاحف": "ز ا ح ف",
    "ضبع مخطط": "ض ب ع م خ ط ط",
    "دب قطبي": "د ب ق ط ب ي",
    "راكون": "ر ا ك و ن",
    "نورس": "ن و ر س",
    "طاووس": "ط ا و و س",
    "أفعى": "أ ف ع ى",
    "نسر ملكي": "ن س ر م ل ك ي",
    "قرش أبيض": "ق ر ش أ ب ي ض",
    "حمام": "ح م ا م",
    "صقر الجديان": "ص ق ر ا ل ج د ي ا ن",
    "حمامة بيضاء": "ح م ا م ة ب ي ض ا ء",
    "دجاج": "د ج ا ج",
    "بوم": "ب و م",
    "بجعة": "ب ج ع ة",
    "ديك رومي": "د ي ك ر و م ي",
    "بومة ثلجية": "ب و م ة ث ل ج ي ة",
    "ديك": "د ي ك",
    "ببغاء أحمر": "ب ب غ ا ء أ ح م ر",
    "قط": "ق ط",
    "كلب": "ك ل ب",
    "أرنب أبيض": "أ ر ن ب أ ب ي ض",
    "أسد أفريقي": "أ س د أ ف ر ي ق ي",
    "تمساح النيل": "ت م س ا ح ا ل ن ي ل",
    "فيل آسيوي": "ف ي ل آ س ي و ي",
    "قرش المطرقة": "ق ر ش ا ل م ط ر ق ة",
    "نمر مرقط": "ن م ر م ر ق ط",
    "فرس النهر": "ف ر س ا ل ن ه ر",
    "خفاش عملاق": "خ ف ا ش ع م ل ا ق",
    "أسد الجبال": "أ س د ا ل ج ب ا ل",
    "ذئب القطب": "ذ ئ ب ا ل ق ط ب",
    "كركدن": "ك ر ك د ن",
    "ضفدع سامة": "ض ف د ع س ا م ة",
    "فيل الأدغال": "ف ي ل ا ل أ د غ ا ل",
    "غرير": "غ ر ي ر",
    "ثعبان الكوبرا": "ث ع ب ا ن ا ل ك و ب ر ا",
    "صقر أحمر": "ص ق ر أ ح م ر",
    "ديك رومي": "د ي ك ر و م ي",
    "بومة ثلجية": "ب و م ة ث ل ج ي ة",
    "ديك": "د ي ك",
    "ببغاء أحمر": "ب ب غ ا ء أ ح م ر",
    "قط": "ق ط",
    "كلب": "ك ل ب",
    "أرنب أبيض": "أ ر ن ب أ ب ي ض",
    "أسد أفريقي": "أ س د أ ف ر ي ق ي",
    "تمساح النيل": "ت م س ا ح ا ل ن ي ل",
    "فيل آسيوي": "ف ي ل آ س ي و ي",
    "قرش المطرقة": "ق ر ش ا ل م ط ر ق ة",
    "نمر مرقط": "ن م ر م ر ق ط",
    "فرس النهر": "ف ر س ا ل ن ه ر",
    "خفاش عملاق": "خ ف ا ش ع م ل ا ق",
    "أسد الجبال": "أ س د ا ل ج ب ا ل",
    "ذئب القطب": "ذ ئ ب ا ل ق ط ب",
    "كركدن": "ك ر ك د ن",
    "ضفدع سامة": "ض ف د ع س ا م ة",
    "فيل الأدغال": "ف ي ل ا ل أ د غ ا ل",
    "غرير": "غ ر ي ر",
    "ثعبان الكوبرا": "ث ع ب ا ن ا ل ك و ب ر ا",
    "صقر أحمر": "ص ق ر أ ح م ر",
    "حمام الغابة": "ح م ا م ا ل غ ا ب ة",
    "ببغاء زاه": "ب ب غ ا ء ز ا ه",
    "نورس بحري": "ن و ر س ب ح ر ي",
    "غراب البحر": "غ ر ا ب ا ل ب ح ر",
    "بومة الصحراء": "ب و م ة ا ل ص ح ر ا ء",
    "حمار": "ح م ا ر",
    "بغل": "ب غ ل",
    "ذئب رمادي": "ذ ئ ب ر م ا د ي",
    "ثعلب فضي": "ث ع ل ب ف ض ي",
    "ثعلب أحمر": "ث ع ل ب أ ح م ر",
    "نسر أبيض": "ن س ر أ ب ي ض",
    "بومة صغيرة": "ب و م ة ص غ ي ر ة",
    "بجعة بيضاء": "ب ج ع ة ب ي ض ا ء",
    "نورس أبيض": "ن و ر س أ ب ي ض",
    "سمكة قرش": "س م ك ة ق ر ش",
    "زرافة طويلة": "ز ر ا ف ة ط و ي ل ة",
    "بجعة سوداء": "ب ج ع ة س و د ا ء",
    "خنفساء": "خ ن ف س ا ء",
    "فيل أبيض": "ف ي ل أ ب ي ض",
    "فأر صغير": "ف أ ر ص غ ي ر",
    "طاووس أزرق": "ط ا و و س أ ز ر ق",
    "بومة برية": "ب و م ة ب ر ي ة",
    "قرش رمادي": "ق ر ش ر م ا د ي",
    "حمامة سوداء": "ح م ا م ة س و د ا ء",
    "بجعة عملاقة": "ب ج ع ة ع م ل ا ق ة",
    "سنجاب أحمر": "س ن ج ا ب أ ح م ر",
    "قط أسود": "ق ط أ س و د",
    "غزال بري": "غ ز ا ل ب ر ي",
    "نملة سوداء": "ن م ل ة س و د ا ء",
    "ببغاء أصفر": "ب ب غ ا ء أ ص ف ر",
    "فرس البحر": "ف ر س ا ل ب ح ر",
    "بومة رمادية": "ب و م ة ر م ا د ي ة",
    "طاووس عملاق": "ط ا و و س ع م ل ا ق",
    "حمار بري": "ح م ا ر ب ر ي",
    "غزال صغير": "غ ز ا ل ص غ ي ر",
    "أفعى ضخمة": "أ ف ع ى ض خ م ة",
    "حمام الغابة": "ح م ا م ا ل غ ا ب ة",
    "ببغاء زاه": "ب ب غ ا ء ز ا ه",
    "نورس بحري": "ن و ر س ب ح ر ي",
    "غراب البحر": "غ ر ا ب ا ل ب ح ر",
    "بومة الصحراء": "ب و م ة ا ل ص ح ر ا ء",
    "حمار": "ح م ا ر",
    "بغل": "ب غ ل",
    "ذئب رمادي": "ذ ئ ب ر م ا د ي",
    "ثعلب فضي": "ث ع ل ب ف ض ي",
    "ثعلب أحمر": "ث ع ل ب أ ح م ر",
    "نسر أبيض": "ن س ر أ ب ي ض",
    "بومة صغيرة": "ب و م ة ص غ ي ر ة",
    "بجعة بيضاء": "ب ج ع ة ب ي ض ا ء",
    "نورس أبيض": "ن و ر س أ ب ي ض",
    "سمكة قرش": "س م ك ة ق ر ش",
    "زرافة طويلة": "ز ر ا ف ة ط و ي ل ة",
    "بجعة سوداء": "ب ج ع ة س و د ا ء",
    "خنفساء": "خ ن ف س ا ء",
    "فيل أبيض": "ف ي ل أ ب ي ض",
    "فأر صغير": "ف أ ر ص غ ي ر",
    "طاووس أزرق": "ط ا و و س أ ز ر ق",
    "بومة برية": "ب و م ة ب ر ي ة",
    "قرش رمادي": "ق ر ش ر م ا د ي",
    "حمامة سوداء": "ح م ا م ة س و د ا ء",
    "بجعة عملاقة": "ب ج ع ة ع م ل ا ق ة",
    "سنجاب أحمر": "س ن ج ا ب أ ح م ر",
    "قط أسود": "ق ط أ س و د",
    "غزال بري": "غ ز ا ل ب ر ي",
    "نملة سوداء": "ن م ل ة س و د ا ء",
    "ببغاء أصفر": "ب ب غ ا ء أ ص ف ر",
    "فرس البحر": "ف ر س ا ل ب ح ر",
    "بومة رمادية": "ب و م ة ر م ا د ي ة",
    "طاووس عملاق": "ط ا و و س ع م ل ا ق",
    "حمار بري": "ح م ا ر ب ر ي",
    "غزال صغير": "غ ز ا ل ص غ ي ر",
    "أفعى ضخمة": "أ ف ع ى ض خ م ة"
}
 






@bot.message_handler(func=lambda message: message.text.lower() in ["انجليزي", "انقليزي", "نجليزي"])
def english_word_game(message):
    user_id = message.from_user.id
    start_times[user_id] = time.time()

    english_word = random.choice(list(english_words_dict.keys()))
    
    bot.send_message(message.chat.id, f"اكتب معنى ↢ ({english_word})")
    bot.register_next_step_handler(message, lambda m: check_meaning(m, english_word))

def check_meaning(answer_message, english_word):
    user_answer = answer_message.text.strip()
    user_id = answer_message.from_user.id

    if user_answer == english_words_dict[english_word]:
        elapsed_time = time.time() - start_times[user_id]
        elapsed_time_str = f"{elapsed_time:.2f} ثانية"
        
        user_points[user_id] = user_points.get(user_id, 0) + 5 
        
        bot.send_message(answer_message.chat.id, 
                         f"صح عليك {answer_message.from_user.first_name} ✔️\n"
                         f"⏰ الوقت: {elapsed_time_str}\n"
                         f"💸 فلوسك: {user_points[user_id]} ريال\n"
                         f"༄")
    else:
        bot.send_message(answer_message.chat.id, f"غلط, الاجابة الصحيحة هي: {english_words_dict[english_word]}")






english_words_dict = {
    "factory": "مصنع",
    "warehouse": "مستودع",
    "barn": "حظيرة",
    "garage": "مرآب",
    "shed": "كوخ",
    "fence": "سياج",
    "gate": "بوابة",
    "elevator": "مصعد",
    "escalator": "سلم متحرك",
    "wheelchair": "كرسي متحرك",
    "crane": "رافعة",
    "bulldozer": "جرافة",
    "tractor": "جرار",
    "forklift": "رافعة شوكية",
    "cart": "عربة",
    "wheelbarrow": "عربة يدوية",
    "shovel": "مجرفة",
    "rake": "مذراة",
    "hoe": "معزقة",
    "plow": "محارث",
    "bucket": "دلو",
    "hose": "خرطوم",
    "water_can": "علبة ماء",
    "sprinkler": "مرشة ماء",
    "broom": "مكنسة",
    "dustpan": "جاروف",
    "mop": "ممسحة",
    "sponge": "إسفنجة",
    "soap_dispenser": "موزع صابون",
    "sink": "حوض",
    "mirror": "مرآة",
    "towel_rack": "حامل مناشف",
    "hanger": "علاقة ملابس",
    "laundry_basket": "سلة غسيل",
    "clothespin": "مشبك غسيل",
    "detergent": "منظف",
    "scrub_brush": "فرشاة تنظيف",
    "vacuum_cleaner": "مكنسة كهربائية",
    "air_conditioner": "مكيف هواء",
    "heater": "مدفأة",
    "fan": "مروحة",
    "radiator": "مبرد",
    "thermostat": "منظم حرارة",
    "light_bulb": "لمبة",
    "chandelier": "ثريا",
    "flashlight": "كشاف",
    "lantern": "فانوس",
    "candle": "شمعة",
    "match": "عود ثقاب",
    "lighter": "ولاعة",
    "firewood": "حطب",
    "charcoal": "فحم",
    "grill": "شواية",
    "barbecue": "شواء",
    "oven": "فرن",
    "microwave": "ميكروويف",
    "stove": "موقد",
    "blender": "خلاط",
    "toaster": "محمص خبز",
    "kettle": "غلاية",
    "coffee_maker": "ماكينة قهوة",
    "mixer": "خلاط كهربائي",
    "measuring_cup": "كوب قياس",
    "measuring_spoon": "ملعقة قياس",
    "knife": "سكين",
    "fork": "شوكة",
    "spoon": "ملعقة",
    "plate": "طبق",
    "bowl": "زبدية",
    "glass": "كوب",
    "mug": "فنجان",
    "jug": "إبريق",
    "bottle": "زجاجة",
    "can": "علبة",
    "pan": "مقلاة",
    "pot": "قدر",
    "colander": "مصفاة",
    "cutting_board": "لوح تقطيع",
    "whisk": "خفاق",
    "spatula": "ملعقة مسطحة",
    "ladle": "مغرفة",
    "grater": "مبشرة",
    "peeler": "قشارة",
    "rolling_pin": "شوبك",
    "thermometer": "ميزان حرارة",
    "pressure_cooker": "طنجرة ضغط",
    "rice_cooker": "قدر طبخ أرز",
    "slow_cooker": "طباخ بطيء",
    "steamer": "آلة تبخير",
    "frying_pan": "مقلاة",
    "saucepan": "قدر صغير",
    "skillet": "مقلاة",
    "broiler": "آلة شواء",
    "tongs": "ملقط",
    "oven_mitt": "قفاز فرن",
    "apron": "مريلة",
    "tablecloth": "مفرش طاولة",
    "napkin": "منديل",
    "placemat": "قاعدة طبق",
    "coaster": "قاعدة أكواب",
    "tray": "صينية",
    "baking_sheet": "ورقة خبز",
    "cupcake_tin": "قالب كعك",
    "muffin_pan": "صينية مافن",
    "cookie_cutter": "قاطع بسكويت",
    "pie_pan": "صينية فطائر",
    "cake_pan": "قالب كيك",
    "oven_rack": "رف فرن",
    "dish_rack": "حامل أطباق",
    "dishwasher": "غسالة أطباق",
    "spice_rack": "حامل توابل",
    "pantry": "مخزن الطعام",
    "freezer": "فريزر",
    "refrigerator": "ثلاجة",
    "microwave": "ميكروويف",
    "bar": "بار",
    "wine_rack": "رف نبيذ",
    "corkscrew": "فتاحة زجاجات",
    "bottle_opener": "فتاحة زجاجات",
    "ice_cube_tray": "صينية مكعبات الثلج",
    "ice_maker": "آلة صنع الثلج",
    "water_dispenser": "موزع ماء",
    "blender": "خلاط",
    "juicer": "عصارة",
    "grill": "شواية",
    "deep_fryer": "قلاية عميقة",
    "waffle_iron": "ماكينة وافل",
    "bread_machine": "آلة صنع الخبز",
    "food_processor": "معالج طعام",
    "slow_cooker": "طباخ بطيء",
    "rice_cooker": "طباخ أرز",
    "coffee_grinder": "مطحنة قهوة",
    "kitchen_scale": "ميزان مطبخ",
    "timer": "مؤقت",
    "thermometer": "ميزان حرارة",
    "knife_block": "حامل سكاكين",
    "cutlery": "أدوات المائدة",
    "utensils": "أدوات",
    "dishes": "أطباق",
    "silverware": "فضيات",
    "glassware": "أواني زجاجية",
    "serveware": "أواني تقديم",
    "cookware": "أدوات الطبخ",
    "bakeware": "أدوات الخبز",
    "kitchen_utensils": "أدوات المطبخ",
    "toaster_oven": "فرن محمصة",
    "griddle": "صينية شوي",
    "slow_cooker": "طباخ بطيء",
    "rice_cooker": "طباخ أرز",
    "coffee_maker": "ماكينة قهوة",
    "blender": "خلاط",
    "mixer": "خلاط كهربائي",
    "food_processor": "معالج طعام",
    "air_fryer": "قلاية هوائية",
    "sous_vide_machine": "آلة طهي بالفيديو",
    "pressure_cooker": "طنجرة ضغط",
    "steamer": "جهاز تبخير",
    "popcorn_maker": "آلة صنع الفشار",
    "waffle_maker": "ماكينة وافل",
    "bread_maker": "آلة صنع الخبز",
    "pizza_stone": "حجر بيتزا",
    "cookie_sheet": "صينية كوكيز",
    "muffin_tin": "قالب مافن",
    "cake_pan": "قالب كيك",
    "pie_plate": "صحن فطيرة",
    "roasting_pan": "صينية تحميص",
    "soup_pot": "قدر حساء",
    "frying_pan": "مقلاة",
    "cast_iron_skillet": "مقلاة من الحديد الزهر",
    "saucepan": "قدر صغير",
    "stockpot": "قدر كبير",
    "colander": "مصفاة",
    "mixing_bowl": "وعاء خلط",
    "cutting_board": "لوح تقطيع",
    "salad_spinner": "مدور سلطة",
    "tongs": "ملقط",
    "whisk": "خفاق",
    "spatula": "ملعقة مسطحة",
    "ladle": "مغرفة",
    "rolling_pin": "شوبك",
    "grater": "مبشرة",
    "peeler": "قشارة",
    "can_opener": "فتاحة علب",
    "bottle_opener": "فتاحة زجاجات",
    "car": "سيارة",
    "computer": "حاسوب",
    "chair": "كرسي",
    "table": "طاولة",
    "book": "كتاب",
    "phone": "هاتف",
    "pen": "قلم",
    "notebook": "دفتر",
    "keyboard": "لوحة مفاتيح",
    "monitor": "شاشة",
    "mouse": "فأرة",
    "window": "نافذة",
    "door": "باب",
    "building": "مبنى",
    "lamp": "مصباح",
    "battery": "بطارية",
    "fan": "مروحة",
    "radio": "راديو",
    "television": "تلفاز",
    "fridge": "ثلاجة",
    "clock": "ساعة",
    "bed": "سرير",
    "pillow": "وسادة",
    "blanket": "بطانية",
    "sofa": "أريكة",
    "printer": "طابعة",
    "scanner": "ماسح ضوئي",
    "tablet": "جهاز لوحي",
    "camera": "كاميرا",
    "speaker": "مكبر صوت",
    "projector": "جهاز عرض",
    "bicycle": "دراجة",
    "motorcycle": "دراجة نارية",
    "truck": "شاحنة",
    "bus": "حافلة",
    "airplane": "طائرة",
    "train": "قطار",
    "boat": "قارب",
    "ship": "سفينة",
    "submarine": "غواصة",
    "satellite": "قمر صناعي",
    "rocket": "صاروخ",
    "robot": "روبوت",
    "calculator": "آلة حاسبة",
    "headphones": "سماعات",
    "microscope": "مجهر",
    "telescope": "تلسكوب",
    "wheel": "عجلة",
    "hammer": "مطرقة",
    "screwdriver": "مفك",
    "wrench": "مفتاح ربط",
    "nail": "مسمار",
    "screw": "برغي",
    "saw": "منشار",
    "drill": "مثقاب",
    "paint": "طلاء",
    "brush": "فرشاة",
    "ladder": "سلم",
    "oven": "فرن",
    "stove": "موقد",
    "microwave": "ميكروويف",
    "sink": "حوض",
    "faucet": "صنبور",
    "dishwasher": "غسالة أطباق",
    "washing_machine": "غسالة",
    "dryer": "مجفف",
    "vacuum_cleaner": "مكنسة كهربائية",
    "iron": "مكواة",
    "hair_dryer": "مجفف شعر",
    "toothbrush": "فرشاة أسنان",
    "toothpaste": "معجون أسنان",
    "soap": "صابون",
    "shampoo": "شامبو",
    "towel": "منشفة",
    "mirror": "مرآة",
    "comb": "مشط",
    "razor": "شفرة حلاقة",
    "clock": "ساعة حائط",
    "calendar": "تقويم",
    "paintbrush": "فرشاة رسم",
    "canvas": "لوحة قماشية",
    "palette": "لوحة ألوان",
    "easel": "حامل لوحات",
    "scissors": "مقص",
    "ruler": "مسطرة",
    "glue": "صمغ",
    "tape": "شريط لاصق",
    "stapler": "دباسة",
    "folder": "مجلد",
    "paper": "ورق",
    "envelope": "مغلف",
    "bag": "حقيبة",
    "suitcase": "حقيبة سفر",
    "backpack": "حقيبة ظهر",
    "purse": "محفظة",
    "wallet": "محفظة نقود",
    "umbrella": "مظلة",
    "shoes": "أحذية",
    "hat": "قبعة",
    "glasses": "نظارات",
    "belt": "حزام",
    "watch": "ساعة يد",
    "jacket": "سترة",
    "pants": "سروال",
    "shirt": "قميص",
    "tie": "ربطة عنق",
    "socks": "جوارب",
    "boots": "أحذية طويلة",
    "sandals": "صنادل",
    "slippers": "نعال",
    "helmet": "خوذة",
    "mask": "قناع",
    "gloves": "قفازات",
    "scarf": "وشاح",
    "coat": "معطف",
    "skirt": "تنورة",
    "dress": "فستان",
    "blouse": "بلوزة",
    "sweater": "سترة صوفية",
    "vest": "صديري",
    "t-shirt": "تي شيرت",
    "jeans": "جينز",
    "shorts": "شورت",
    "overalls": "أفرهول",
    "suit": "بدلة",
    "swimsuit": "ملابس سباحة",
    "goggles": "نظارات واقية",
    "ring": "خاتم",
    "necklace": "قلادة",
    "bracelet": "سوار",
    "earrings": "أقراط",
    "brooch": "بروش",
    "anklet": "خلخال",
    "pillowcase": "غطاء وسادة",
    "bedsheet": "ملاءة",
    "quilt": "لحاف",
    "comforter": "غطاء سرير",
    "curtains": "ستائر",
    "rug": "سجادة",
    "carpet": "بساط",
    "floor": "أرضية",
    "wall": "حائط",
    "ceiling": "سقف",
    "roof": "سقف المنزل",
    "chimney": "مدخنة",
    "stairs": "سلالم",
    "balcony": "شرفة",
    "garden": "حديقة",
    "yard": "فناء",
    "garage": "مرآب",
    "gate": "بوابة",
    "fence": "سياج",
    "pool": "مسبح",
    "pond": "بركة",
    "lake": "بحيرة",
    "river": "نهر",
    "bridge": "جسر",
    "mountain": "جبل",
    "valley": "وادي",
    "desert": "صحراء",
    "forest": "غابة",
    "field": "حقل",
    "cave": "كهف",
    "beach": "شاطئ",
    "ocean": "محيط",
    "sea": "بحر",
    "island": "جزيرة",
    "peninsula": "شبه جزيرة",
    "waterfall": "شلال",
    "volcano": "بركان",
    "canyon": "وادي عميق",
    "cliff": "جرف",
    "hill": "تل",
    "plateau": "هضبة",
    "plain": "سهل",
    "meadow": "مرج",
    "stream": "جدول",
    "brook": "جدول صغير",
    "bay": "خليج",
    "gulf": "خليج",
    "lagoon": "بحيرة ضحلة",
    "reef": "شعاب مرجانية",
    "atoll": "حلقة من الشعاب",
    "archipelago": "أرخبيل",
    "continent": "قارة",
    "country": "دولة",
    "state": "ولاية",
    "city": "مدينة",
    "town": "بلدة",
    "village": "قرية",
    "street": "شارع",
    "road": "طريق",
    "highway": "طريق سريع",
    "bridge": "جسر",
    "tunnel": "نفق",
    "crosswalk": "معبر المشاة",
    "sidewalk": "رصيف",
    "traffic_light": "إشارة مرور",
    "sign": "علامة",
    "billboard": "لوحة إعلانات",
    "bench": "مقعد",
    "trash_can": "صندوق قمامة",
    "lamp_post": "عمود إنارة",
    "mailbox": "صندوق بريد",
    "fire_hydrant": "صنبور إطفاء",
    "parking_meter": "عداد موقف سيارات",
    "bus_stop": "محطة حافلات",
    "train_station": "محطة قطار",
    "airport": "مطار",
    "seaport": "ميناء",
    "gas_station": "محطة وقود",
    "restaurant": "مطعم",
    "cafe": "مقهى",
    "store": "متجر",
    "supermarket": "سوبرماركت",
    "mall": "مركز تجاري",
    "market": "سوق",
    "shop": "متجر",
    "bakery": "مخبز",
    "butcher": "جزار",
    "pharmacy": "صيدلية",
    "hospital": "مستشفى",
    "clinic": "عيادة",
    "school": "مدرسة",
    "university": "جامعة",
    "library": "مكتبة",
    "museum": "متحف",
    "cinema": "سينما",
    "theater": "مسرح",
    "park": "منتزه",
    "playground": "ملعب أطفال",
    "stadium": "ملعب",
    "gym": "نادي رياضي",
    "swimming_pool": "مسبح",
    "court": "ملعب",
    "field": "ملعب",
    "track": "مضمار",
    "arena": "ساحة",
    "plaza": "ساحة عامة",
    "square": "ميدان",
    "monument": "نصب تذكاري",
    "fountain": "نافورة",
    "statue": "تمثال",
    "tower": "برج",
    "castle": "قلعة",
    "palace": "قصر",
    "church": "كنيسة",
    "mosque": "مسجد",
    "temple": "معبد",
    "synagogue": "كنيس",
    "printer": "طابعة",
    "camera": "كاميرا",
    "screwdriver": "مفك",
    "telegram": "تيليجرام",
    "instagram": "إنستجرام",
    "quran": "مصحف",
    "carpet": "سجادة",
    "mobile": "موبايل",
    "laptop": "لابتوب",
    "desktop": "جهاز مكتبي",
    "keyboard": "لوحة مفاتيح",
    "mouse": "فأرة",
    "headphones": "سماعات",
    "microphone": "ميكروفون",
    "projector": "بروجكتور",
    "calculator": "آلة حاسبة",
    "remote": "ريموت",
    "television": "تلفاز",
    "lamp": "مصباح",
    "fan": "مروحة",
    "air_conditioner": "مكيف هواء",
    "washing_machine": "غسالة",
    "fridge": "ثلاجة",
    "oven": "فرن",
    "stove": "موقد",
    "microwave": "ميكروويف",
    "dishwasher": "غسالة صحون",
    "toaster": "محمصة",
    "kettle": "غلاية",
    "blender": "خلاط",
    "iron": "مكواة",
    "vacuum_cleaner": "مكنسة كهربائية",
    "heater": "مدفأة",
    "electric_fan": "مروحة كهربائية",
    "ceiling_fan": "مروحة سقف",
    "electric_stove": "موقد كهربائي",
    "sofa": "كنبة",
    "chair": "كرسي",
    "table": "طاولة",
    "desk": "مكتب",
    "bed": "سرير",
    "wardrobe": "دولاب",
    "drawer": "درج",
    "shelf": "رف",
    "mirror": "مرآة",
    "curtain": "ستارة",
    "blanket": "بطانية",
    "pillow": "وسادة",
    "rug": "سجادة صغيرة",
    "cushion": "وسادة صغيرة",
    "clock": "ساعة",
    "painting": "لوحة",
    "poster": "ملصق",
    "calendar": "تقويم",
    "bookshelf": "رف كتب",
    "notebook": "دفتر",
    "pen": "قلم",
    "pencil": "قلم رصاص",
    "eraser": "ممحاة",
    "sharpener": "براية",
    "stapler": "دباسة",
    "scissors": "مقص",
    "glue": "صمغ",
    "tape": "شريط لاصق",
    "paper": "ورق",
    "envelope": "مظروف",
    "file": "ملف",
    "folder": "مجلد",
    "document": "وثيقة",
    "map": "خريطة",
    "newspaper": "جريدة",
    "magazine": "مجلة",
    "book": "كتاب",
    "textbook": "كتاب دراسي",
    "dictionary": "قاموس",
    "passport": "جواز سفر",
    "ID_card": "بطاقة هوية",
    "driver_license": "رخصة قيادة",
    "wallet": "محفظة",
    "bag": "حقيبة",
    "backpack": "حقيبة ظهر",
    "suitcase": "حقيبة سفر",
    "umbrella": "مظلة",
    "key": "مفتاح",
    "keychain": "سلسلة مفاتيح",
    "lock": "قفل",
    "doorknob": "مقبض باب",
    "window": "نافذة",
    "door": "باب",
    "gate": "بوابة",
    "roof": "سقف",
    "wall": "جدار",
    "floor": "أرضية",
    "garage": "مرآب",
    "garden": "حديقة",
    "yard": "فناء",
    "balcony": "شرفة",
    "chimney": "مدخنة",
    "fence": "سياج",
    "mailbox": "صندوق بريد",
    "trash_can": "سلة قمامة",
    "recycling_bin": "سلة إعادة تدوير",
    "light_switch": "مفتاح إضاءة",
    "socket": "مقبس كهرباء",
    "fire_extinguisher": "طفاية حريق",
    "alarm_clock": "منبه",
    "thermometer": "مقياس حرارة",
    "battery": "بطارية",
    "light_bulb": "مصباح كهربائي",
    "candle": "شمعة",
    "match": "عود ثقاب",
    "lighter": "ولاعة",
    "flashlight": "كشاف",
    "binoculars": "منظار",
    "telescope": "تلسكوب",
    "glasses": "نظارات",
    "sunglasses": "نظارات شمسية",
    "helmet": "خوذة",
    "gloves": "قفازات",
    "scarf": "وشاح",
    "hat": "قبعة",
    "umbrella": "مظلة",
    "coat": "معطف",
    "jacket": "سترة",
    "boots": "أحذية",
    "shoes": "أحذية",
    "slippers": "شبشب",
    "socks": "جوارب",
    "towel": "منشفة",
    "shampoo": "شامبو",
    "soap": "صابون",
    "toothbrush": "فرشاة أسنان",
    "toothpaste": "معجون أسنان",
    "hair_brush": "فرشاة شعر",
    "razor": "شفرة حلاقة",
    "nail_clippers": "قصافة أظافر",
    "scissors": "مقص",
    "comb": "مشط",
    "perfume": "عطر",
    "deodorant": "مزيل عرق",
    "makeup": "مكياج",
    "shaving_cream": "كريم حلاقة",
    "tissue": "منديل ورقي",
    "bandage": "ضمادة",
    "medicine": "دواء",
    "vitamins": "فيتامينات",
    "thermometer": "ميزان حرارة",
    "mask": "قناع",
    "first_aid_kit": "عدة إسعافات أولية",
    "flashlight": "مصباح يدوي",
    "pliers": "كماشة",
    "straw": "قشة شرب",
    "bottle": "زجاجة",
    "can": "علبة معدنية",
    "jar": "برطمان",
    "cup": "كوب",
    "mug": "قدح",
    "plate": "طبق",
    "bowl": "زبدية",
    "spoon": "ملعقة",
    "fork": "شوكة",
    "knife": "سكين",
    "chopsticks": "عيدان طعام",
    "tray": "صينية",
    "napkin": "منديل",
    "toothpick": "عود أسنان",
    "strawberry": "فراولة",
    "apple": "تفاح",
    "banana": "موز",
    "grape": "عنب",
    "watermelon": "بطيخ",
    "melon": "شمام",
    "orange": "برتقال",
    "lemon": "ليمون",
    "lime": "ليمون أخضر",
    "pineapple": "أناناس",
    "mango": "مانجو",
    "coconut": "جوز الهند",
    "kiwi": "كيوي",
    "avocado": "أفوكادو",
    "tomato": "طماطم",
    "cucumber": "خيار",
    "carrot": "جزر",
    "lettuce": "خس",
    "onion": "بصل",
    "garlic": "ثوم",
    "ginger": "زنجبيل",
    "potato": "بطاطس",
    "sweet_potato": "بطاطا حلوة",
    "corn": "ذرة",
    "broccoli": "بروكلي",
    "spinach": "سبانخ",
    "cabbage": "كرنب",
    "pepper": "فلفل",
    "chili": "فلفل حار",
    "beans": "فاصوليا",
    "peas": "بازلاء",
    "eggplant": "باذنجان",
    "pumpkin": "قرع",
    "zucchini": "كوسا",
    "bread": "خبز",
    "rice": "أرز",
    "pasta": "مكرونة",
    "noodles": "نودلز",
    "cheese": "جبنة",
    "butter": "زبدة",
    "yogurt": "زبادي",
    "milk": "حليب",
    "cream": "كريمة",
    "egg": "بيضة",
    "chicken": "دجاج",
    "beef": "لحم بقر",
    "pork": "لحم خنزير",
    "fish": "سمك",
    "shrimp": "جمبري",
    "crab": "سلطعون",
    "lobster": "كركند",
    "oyster": "محار",
    "salmon": "سلمون",
    "tuna": "تونة",
    "turkey": "ديك رومي",
    "lamb": "لحم ضأن",
    "sausage": "نقانق",
    "bacon": "لحم مقدد",
    "steak": "شريحة لحم",
    "hamburger": "هامبرجر",
    "sandwich": "شطيرة",
    "pizza": "بيتزا",
    "soup": "شوربة",
    "salad": "سلطة",
    "pie": "فطيرة",
    "cake": "كعكة",
    "cookie": "بسكويت",
    "brownie": "براوني",
    "ice_cream": "آيس كريم",
    "pudding": "بودنج",
    "jelly": "جيلي",
    "candy": "حلويات",
    "chocolate": "شوكولاتة",
    "honey": "عسل",
    "sugar": "سكر",
    "salt": "ملح",
    "pepper": "فلفل أسود",
    "spice": "توابل",
    "herb": "عشبة",
    "oil": "زيت",
    "vinegar": "خل",
    "sauce": "صلصة",
    "ketchup": "كاتشب",
    "mustard": "خردل",
    "mayonnaise": "مايونيز",
    "juice": "عصير",
    "water": "ماء",
    "soda": "مشروب غازي",
    "tea": "شاي",
    "coffee": "قهوة",
    "wine": "نبيذ",
    "beer": "بيرة",
    "whiskey": "ويسكي",
    "vodka": "فودكا",
    "rum": "رم",
    "champagne": "شامبانيا",
    "cocktail": "كوكتيل",
    "energy_drink": "مشروب طاقة",
    "smoothie": "سموذي",
    "milkshake": "ميلك شيك",
    "lemonade": "ليموناضة",
    "ginger_ale": "زنجبيل غازي",
    "root_beer": "جعة غير كحولية",
    "espresso": "إسبريسو",
    "latte": "لاتيه",
    "cappuccino": "كابتشينو",
    "macchiato": "ماكياتو",
    "frappe": "فرابيه",
    "iced_tea": "شاي مثلج",
    "hot_chocolate": "شوكولاتة ساخنة",
    "cocktail_shaker": "هزاز كوكتيل",
    "wine_glass": "كأس نبيذ",
    "champagne_flute": "كأس شامبانيا",
    "beer_mug": "قدح بيرة",
    "shot_glass": "كأس صغير",
    "thermos": "ترمس",
    "cooler": "صندوق تبريد",
    "ice_cube": "مكعب ثلج",
    "blender": "خلاط",
    "mixer": "خلاط كهربائي",
    "whisk": "خفاقة",
    "strainer": "مصفاة",
    "colander": "مصفاة طعام",
    "sieve": "غربال",
    "ladle": "مغرفة",
    "spatula": "ملعقة مسطحة",
    "tongs": "ملقط",
    "grater": "مبشرة",
    "peeler": "قشارة",
    "measuring_cup": "كوب قياس",
    "measuring_spoon": "ملعقة قياس",
    "kitchen_scale": "ميزان مطبخ",
    "timer": "مؤقت",
    "cutting_board": "لوح تقطيع",
    "knife_set": "مجموعة سكاكين",
    "carving_knife": "سكين تقطيع",
    "chef_knife": "سكين طاهي",
    "bread_knife": "سكين خبز",
    "butter_knife": "سكين زبدة",
    "table_spoon": "ملعقة طعام",
    "tea_spoon": "ملعقة شاي",
    "serving_spoon": "ملعقة تقديم",
    "fork_set": "مجموعة شوك",
    "dinner_fork": "شوكة طعام",
    "salad_fork": "شوكة سلطة",
    "dessert_fork": "شوكة حلويات",
    "spork": "شوكة وملعقة معًا",
    "chopsticks_set": "مجموعة عيدان طعام",
    "dish_rack": "حامل أطباق",
    "dish_towel": "منشفة أطباق",
    "oven_mitt": "قفاز فرن",
    "apron": "مريلة",
    "bread_box": "صندوق خبز",
    "sugar_bowl": "وعاء سكر",
    "salt_shaker": "مملحة",
    "pepper_mill": "مطحنة فلفل",
    "oil_bottle": "زجاجة زيت",
    "vinegar_bottle": "زجاجة خل",
    "cookie_jar": "برطمان بسكويت",
    "napkin_holder": "حامل مناديل",
    "placemat": "مفرش طاولة",
    "tablecloth": "غطاء طاولة",
    "candlestick": "شمعدان",
    "teapot": "إبريق شاي",
    "coaster": "كوب حماية",
    "tray_table": "طاولة صينية",
    "food_processor": "محضرة طعام",
    "rice_cooker": "طباخة أرز",
    "pressure_cooker": "طنجرة ضغط",
    "slow_cooker": "طباخة بطيئة",
    "deep_fryer": "مقلاة عميقة",
    "electric_grill": "شواية كهربائية",
    "toaster_oven": "فرن محمصة",
    "sandwich_maker": "صانع شطائر",
    "wrench": "مفتاح ربط",
    "hammer": "مطرقة",
    "drill": "مثقاب",
    "tape_measure": "شريط قياس",
    "level": "ميزان مياه",
    "screw": "برغي",
    "bolt": "مسامير",
    "nut": "صمولة",
    "washer": "غسالة",
    "nail": "مسمار"
}







@bot.message_handler(func=lambda message: message.text.lower() == "احسب")
def start_calculation_game(message):
    num1 = random.randint(0, 1000)
    num2 = random.randint(0, 1000)
    
    if message.from_user.id not in current_questions:
        operation = random.choice(['+', '-'])
    else:
        previous_operation = current_questions[message.from_user.id]['operation']
        operation = '-' if previous_operation == '+' else '+'

    if operation == '+':
        correct_answer = num1 + num2
        question = f"{num1} + {num2} = ?"
    else:
        correct_answer = num1 - num2
        question = f"{num1} - {num2} = ?"
    
    current_questions[message.from_user.id] = {'answer': correct_answer, 'operation': operation}
    start_times[message.from_user.id] = time.time()
    game_active[message.from_user.id] = True

    bot.send_message(message.chat.id, question)

@bot.message_handler(func=lambda message: message.from_user.id in current_questions and game_active.get(message.from_user.id, False))
def check_calculation_answer(answer_message):
    user_id = answer_message.from_user.id
    if user_id in current_questions:
        correct_answer = current_questions[user_id]['answer']

        try:
            user_answer = int(answer_message.text.strip())
            is_correct = user_answer == correct_answer

            if is_correct:
                user_points[user_id] += 24
                bot.send_message(answer_message.chat.id, f"صح عليك {answer_message.from_user.first_name} ✔️\n💸 فلوسك: {user_points[user_id]} ريال\n༄")
            else:
                bot.send_message(answer_message.chat.id, "ههعهههههه اجابتك غلط ,, قفلت للعبه")
            
            del current_questions[user_id]
            del start_times[user_id]
            game_active[user_id] = False

        except ValueError:
            bot.send_message(answer_message.chat.id, "يرجى إدخال رقم صحيح فقط! 📉")

@bot.message_handler(func=lambda message: message.text.lower() == "خواتم")
def start_ring_game(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("سهل", callback_data="easy"))
    markup.add(types.InlineKeyboardButton("صعب", callback_data="medium"))
    markup.add(types.InlineKeyboardButton("صعب جدا", callback_data="hard"))
    
    bot.send_message(message.chat.id, "اختر مستوى لعب الخواتم:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in ["easy", "medium", "hard"])
def set_game_level(call):
    user_id = call.from_user.id
    level = call.data

    if level == "easy":
        ring_position[user_id] = random.sample(range(1, 7), 2)
        game_level[user_id] = "سهل"
    elif level == "medium":
        ring_position[user_id] = [random.choice(range(1, 7))]
        game_level[user_id] = "صعب"
    else:  # "hard"
        ring_position[user_id] = [random.choice(range(1, 7))]
        game_level[user_id] = "صعب جدا"

    bot.send_message(call.message.chat.id, 
                     "1         2        3      4       5      6\n"
                     "  ↓        ↓         ↓       ↓        ↓       ↓\n"
                     "  ✋🏼 ‹› ✋🏼 ‹› ✋🏼 ‹› ✋🏼 ‹› ✋🏼 ‹› ✋🏼\n\n"
                     "⚘ اختار اليد اللي تتوقع فيها الخاتم")

@bot.message_handler(func=lambda message: message.from_user.id in ring_position)
def check_ring_choice(answer_message):
    user_id = answer_message.from_user.id
    try:
        user_choice = int(answer_message.text.strip())
        
        if user_choice < 1 or user_choice > 6:
            bot.send_message(answer_message.chat.id, "يرجى اختيار رقم من 1 إلى 6 فقط! 📉")
            return

        correct_answer = ring_position[user_id]

        if user_choice in correct_answer:
            elapsed_time = time.time() - start_times[user_id]
            user_points[user_id] += 27
            elapsed_time_str = f"{elapsed_time:.2f} ثانية"
            bot.send_message(answer_message.chat.id, 
                             f"صح عليك {answer_message.from_user.first_name} ✔️\n"
                             f"⏰ الوقت: {elapsed_time_str}\n"
                             f"💸 فلوسك: {user_points[user_id]} ريال\n"
                             f"༄")
        else:
            bot.send_message(answer_message.chat.id, f"اجابتك غلط, الاجابه الصحيحه هيا: {', '.join(map(str, correct_answer))}")

        del ring_position[user_id]

    except ValueError:
        bot.send_message(answer_message.chat.id, "يرجى إدخال رقم صحيح فقط! 📉")




options = ["حجرة", "ورقة", "مقص"]

@bot.message_handler(func=lambda message: message.text.lower() in ["حجرة", "حجره"])
def start_game(message):

    markup = types.InlineKeyboardMarkup()  
    for option in options:
        markup.add(types.InlineKeyboardButton(option, callback_data=option))
    
    bot.send_message(message.chat.id, "اختار: حجرة / ورقة / مقص", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in options)
def handle_user_choice(call):
    user_choice = call.data
    bot_choice = random.choice(options) 


    result_message = f"أنت: {get_emoji(user_choice)}\nأنا: {get_emoji(bot_choice)}\n"
    if user_choice == bot_choice:
        result_message += f"النتيجة: {call.from_user.first_name} ⚖️ {call.from_user.first_name}"
    elif (user_choice == "حجرة" and bot_choice == "مقص") or \
         (user_choice == "ورقة" and bot_choice == "حجرة") or \
         (user_choice == "مقص" and bot_choice == "ورقة"):
        result_message += f"النتيجة: {call.from_user.first_name} 🏆"
    else:
        result_message += f"النتيجة: أنا الفائز! 🏆"


    bot.edit_message_text(result_message, chat_id=call.message.chat.id, message_id=call.message.message_id)

def get_emoji(choice):
    if choice == "حجرة":
        return "🪨"
    elif choice == "ورقة":
        return "📃"
    elif choice == "مقص":
        return "✂️"










@bot.message_handler(func=lambda message: "انشاء حساب بنكي" in message.text)
def bank_account_creation(message):
    user_id = message.from_user.id
    bot.send_message(message.chat.id, 
                     "عشان تسوي حساب لازم تختار بنك\n\n"
                     "⇠ ميكي ماوس\n"
                     "⇠ بلو سكاي\n"
                     "⇠ كريديت\n\n"
                     "- اختر بنكك الآن:")


@bot.message_handler(func=lambda message: message.text.lower() in ["كريديت", "ميكي ماوس", "بلو سكاي"])
def create_account(message):
    user_id = message.from_user.id
    bank_name = message.text
    
    if user_id not in user_accounts:
        account_number = random.randint(1000000000, 9999999999)
        user_accounts[user_id] = bank_name
        user_points[user_id] = 0 
        user_names[user_id] = message.from_user.first_name  
        bot.send_message(message.chat.id, 
                         f"• وسوينا لك حساب في بنك {bank_name}\n"
                         f"⇜ رقم حسابك ↢ {account_number}\n"
                         f"⇜ نوع البطاقة ↢ ديسكفر\n"
                         f"⇜ فلوسك ↢ 0 ريال 💸")
    else:
        bot.send_message(message.chat.id, "عندك حساب بالفعل!")


@bot.message_handler(func=lambda message: "حسابي" in message.text)
def show_account_details(message):
    user_id = message.from_user.id
    
    if user_id in user_accounts:
        account_number = random.randint(1000000000, 9999999999) 
        bank_name = user_accounts[user_id]
        account_name = user_names[user_id]
        balance = user_points.get(user_id, 0)
        
        bot.send_message(message.chat.id, 
                         f"⇜ الاسم ↢ {account_name}\n"
                         f"⇜ الحساب ↢ {account_number}\n"
                         f"⇜ بنك ↢ {bank_name}\n"
                         f"⇜ نوع ↢ ديسكفر\n"
                         f"⇜ الرصيد ↢ {balance} ريال 💸")
    else:
        bot.send_message(message.chat.id, "ليس لديك حساب بعد!")


@bot.message_handler(func=lambda message: "راتب" in message.text)
def ask_salary(message):
    user_id = message.from_user.id
    group_chat_id = message.chat.id

    if user_id not in user_accounts:
        bot.send_message(message.chat.id, "عزيزي ليس لديك حساب فـ البنك - قم بانشاء حساب بنكي من خلال كتابه انشاء حساب بنكي")
        return

    user_group_chat_id[user_id] = group_chat_id


    if user_id in user_salary_time:
        remaining_time = user_salary_time[user_id] - time.time()
        if remaining_time > 0:

            minutes, seconds = divmod(int(remaining_time), 60)
            time_str = f"{minutes:02}:{seconds:02}"
            bot.send_message(message.chat.id, f"⇜ راتبك هينزل بعد {time_str} دقائق")
            return


    if user_id not in user_jobs:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(
            telebot.types.InlineKeyboardButton("صياد", callback_data="صياد"),
            telebot.types.InlineKeyboardButton("جزار", callback_data="جزار"),
            telebot.types.InlineKeyboardButton("بنا", callback_data="بنا"),
            telebot.types.InlineKeyboardButton("مهندس", callback_data="مهندس"),
            telebot.types.InlineKeyboardButton("دكتور", callback_data="دكتور"),
            telebot.types.InlineKeyboardButton("عامل نظافة", callback_data="عامل نظافة")
        )
        bot.send_message(message.chat.id, "تحب تشتغل اي ؟", reply_markup=markup)
    else:

        user_salary_time[user_id] = time.time() + 600  # 10 دقائق
        bot.send_message(message.chat.id, "⇜ راتبك هينزل بعد 10:00 دقائق")


@bot.callback_query_handler(func=lambda call: call.data in ["صياد", "جزار", "بنا", "مهندس", "دكتور", "عامل نظافة"])
def set_job_and_salary(call):
    user_id = call.from_user.id
    job = call.data

    if user_id in user_jobs:
        bot.send_message(call.message.chat.id, f"انت شغال كـ {user_jobs[user_id]} - ما ينفعش تشتغل شغلانتين")
        return

    user_jobs[user_id] = job
    user_salary_time[user_id] = time.time() + 600  # 10 دقائق
    user_salaries[user_id] = 500 


    bot.send_message(call.message.chat.id, "⇜ راتبك هينزل بعد 10:00 دقائق")


    start_salary_timer(user_id)

def start_salary_timer(user_id):
    while True:
        remaining_time = user_salary_time[user_id] - time.time()
        if remaining_time <= 0:

            user_points[user_id] += user_salaries[user_id]
            

            group_chat_id = user_group_chat_id[user_id]
            bot.send_message(group_chat_id, 
                             f"اشعار ايداع\n"
                             f"⇜ الحساب ↢ {random.randint(1000000000, 9999999999)}\n"
                             f"⇜ الرصيد الجديد ↢ {user_points[user_id]} ريال 💸")
            break
        time.sleep(1) 

# دالة للبقشيش
@bot.message_handler(func=lambda message: message.text.lower() in ["بخشيش", "بقشيش", "فلوس"])
def ask_tip(message):
    user_id = message.from_user.id

    if user_id not in user_accounts:
        bot.send_message(message.chat.id, 
                         "⇜ ماعندك حساب بنكي\n"
                         "⇜ ما يمدي اعطيك بقشيش\n"
                         "⇜ اكتب - انشاء حساب بنكي")
        return

    if user_id in user_tip_time:
        remaining_time = user_tip_time[user_id] - time.time()
        if remaining_time > 0:
            minutes, seconds = divmod(int(remaining_time), 60)
            time_str = f"{minutes:02}:{seconds:02}"
            bot.send_message(message.chat.id, f"⇜ مايمدي اعطيك بخشيش الحين\n⇜ تعال بعد {time_str} دقيقة")
            return


    tip_amount = random.randint(1, 500) 
    user_points[user_id] += tip_amount
    user_tip_time[user_id] = time.time() + 600  

    bot.send_message(message.chat.id, f"⇜ دلعتك وعطيتك {tip_amount} ريال 💸")




# دالة للحظ
@bot.message_handler(func=lambda message: message.text.lower().startswith("حظ "))
def place_bet(message):
    user_id = message.from_user.id


    if user_id in user_luck_time:
        remaining_time = user_luck_time[user_id] - time.time()
        if remaining_time > 0:
            minutes, seconds = divmod(int(remaining_time), 60)
            time_str = f"{minutes:02}:{seconds:02}"
            bot.send_message(message.chat.id, f"⇜ مايمديك تلعب لعبة الحظ الحين !\n⇜ تعال بعد {time_str} دقيقة")
            return


    bet_amount = int(message.text.split()[1]) 

    if user_id not in user_accounts:
        bot.send_message(message.chat.id, 
                         "⇜ ماعندك حساب بنكي\n"
                         "⇜ اكتب - انشاء حساب بنكي")
        return


    balance = user_points.get(user_id, 0)
    if balance < bet_amount:
        bot.send_message(message.chat.id, "⇜ فلوسك ماتكفي")
        return


    if bet_amount > 5000:
        win_probability = 30  # 30% chance to win
    else:
        win_probability = 50  # 50% chance to win


    if random.randint(1, 100) <= win_probability:

        winnings = bet_amount * 2
        user_points[user_id] += winnings
        bot.send_message(message.chat.id, 
                         f"⇜ مبروك فزت بالحظ !\n"
                         f"⇜ فلوسك قبل ↢ {balance} ريال 💸\n"
                         f"⇜ فلوسك الحين ↢ {user_points[user_id]} ريال 💸")
    else:

        user_points[user_id] -= bet_amount
        bot.send_message(message.chat.id, 
                         f"⇜ واك واك خسرت بالحظ\n"
                         f"⇜ فلوسك قبل ↢ {balance} ريال 💸\n"
                         f"⇜ فلوسك الحين ↢ {user_points[user_id]} ريال 💸")


    user_luck_time[user_id] = time.time() + 1200  # 20 دقيقة







@bot.message_handler(func=lambda message: message.text.lower() in ["فلوسي", "فلوسى", "فلوثي", "فلوثى"])
def check_balance(message):
    user_id = message.from_user.id
    
    if user_id not in user_accounts:
        bot.send_message(message.chat.id, "ليس لديك حساب بعد!")
        return

    balance = user_points.get(user_id, 0)
    bot.send_message(message.chat.id, f"⇜ فلوسك: {balance} ريال 💸")


############################################




def is_group_owner(user_id, chat_id):
    admins = bot.get_chat_administrators(chat_id)
    for admin in admins:
        if admin.user.id == user_id and admin.status == 'creator':
            return True
    return False


def is_user_admin(user_id, chat_id):
    admins = bot.get_chat_administrators(chat_id)
    for admin in admins:
        if admin.user.id == user_id:
            return True
    return False

# 

@bot.message_handler(func=lambda message: message.text.lower() in ["تفعيل حمايه", "تفعيل الحماية"])
def activate_protection(message):
    if is_group_owner(message.from_user.id, message.chat.id):
        global spam_protection_active, offensive_language_protection_active
        spam_protection_active = True
        offensive_language_protection_active = True
        bot.send_message(message.chat.id, "⇜ تم تفعيل الحماية\n⇜ حماية من سبام ✅\n⇜ حماية من الألفاظ ✅")
    else:
        bot.send_message(message.chat.id, "⇜ عزيزي، هذا الأمر مخصص لمالك الجروب فقط.")


@bot.message_handler(func=lambda message: message.text.lower() in ["قفل حمايه", "قفل الحماية"])
def deactivate_protection(message):
    if is_group_owner(message.from_user.id, message.chat.id):
        global spam_protection_active, offensive_language_protection_active
        spam_protection_active = False
        offensive_language_protection_active = False
        bot.send_message(message.chat.id, "⇜ تم قفل الحماية ⚠️\n⇜ حماية من سبام ❌\n⇜ حماية من الألفاظ ❌")
    else:
        bot.send_message(message.chat.id, "⇜ عزيزي، هذا الأمر مخصص لمالك الجروب فقط.")


@bot.message_handler(func=lambda message: message.text.lower() in ["احا", "خخخخ", "حمار"])
def handle_offensive_language(message):
    if offensive_language_protection_active:
        user_id = message.from_user.id
        if is_group_owner(user_id, message.chat.id):
            bot.send_message(message.chat.id, "⇜ يا مالك الجروب، لا تسب !!")
        elif is_user_admin(user_id, message.chat.id):
            bot.send_message(message.chat.id, "⇜ يا مالك، تعال شوف الادمن يسب !")
        else:
            if user_id not in muted_users:
                mute_user_by_id(message.chat.id, user_id)
                markup = types.InlineKeyboardMarkup()
                button_unmute = types.InlineKeyboardButton("فك كتم", callback_data=f"unmute_{user_id}")
                markup.add(button_unmute)
                bot.send_message(message.chat.id, "⇜ تم كتمك ممنوع الألفاظ هنا.", reply_markup=markup)
                muted_users.add(user_id)


@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    global user_message_count

    if spam_protection_active:
        user_id = message.from_user.id
        current_time = time.time()

        if user_id not in user_message_count:
            user_message_count[user_id] = []

        user_message_count[user_id].append(current_time)
        user_message_count[user_id] = [timestamp for timestamp in user_message_count[user_id] if timestamp > current_time - 5]

        if len(user_message_count[user_id]) >= 7:
            if user_id not in muted_users:
                if is_group_owner(user_id, message.chat.id):
                    bot.send_message(message.chat.id, "⇜ يا مالك الجروب، لا تسوي سبااام !!")
                elif is_user_admin(user_id, message.chat.id):
                    bot.send_message(message.chat.id, "⇜ يا مالك، تعال شوف الادمن يسوي سبام !")
                else:
                    mute_user_by_id(message.chat.id, user_id)
                    markup = types.InlineKeyboardMarkup()
                    button_unmute = types.InlineKeyboardButton("فك كتم", callback_data=f"unmute_{user_id}")
                    markup.add(button_unmute)
                    bot.send_message(message.chat.id, f"⇜ تم كتم مستخدم ذو المعرف {user_id} بسبب سبام.", reply_markup=markup)
                    muted_users.add(user_id)


def mute_user_by_id(chat_id, user_id):
    try:
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=False)
    except Exception as e:
        bot.send_message(chat_id, f"⇜ حدث خطأ أثناء كتم المستخدم: {str(e)}")


@bot.callback_query_handler(func=lambda call: call.data.startswith("unmute_"))
def handle_unmute(call):
    user_id = int(call.data.split("_")[1])
    if is_user_admin(call.from_user.id, call.message.chat.id):
        unmute_user_by_id(call.message.chat.id, user_id)
        bot.answer_callback_query(call.id, "⇜ تم فك كتم المستخدم.")
        muted_users.discard(user_id)
    else:
        bot.answer_callback_query(call.id, "⇜ ليس لديك صلاحيات لفك الكتم.", show_alert=True)

def unmute_user_by_id(chat_id, user_id):
    try:
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=True)
        bot.send_message(chat_id, f"⇜ تم فك كتم المستخدم ذو المعرف {user_id}.")
    except Exception as e:
        bot.send_message(chat_id, f"⇜ حدث خطأ أثناء فك كتم المستخدم: {str(e)}")


@bot.message_handler(func=lambda message: message.text.lower() in ["كتم", "/mute"])
def mute_user(message):
    if not is_user_admin(message.from_user.id, message.chat.id):
        bot.send_message(message.chat.id, "⇜ ليس لديك صلاحيات لكتم المستخدمين.")
        return

    if message.reply_to_message:
        user_to_mute_id = message.reply_to_message.from_user.id
        mute_user_by_id(message.chat.id, user_to_mute_id)
    else:
        bot.send_message(message.chat.id, "⇜ يجب الرد على رسالة المستخدم الذي تريد كتمه.")


@bot.message_handler(func=lambda message: message.text.lower() in ["فك كتم", "/unmute"])
def unmute_user(message):
    if not is_user_admin(message.from_user.id, message.chat.id):
        bot.send_message(message.chat.id, "⇜ ليس لديك صلاحيات لفك كتم المستخدمين.")
        return

    if message.reply_to_message:
        user_to_unmute_id = message.reply_to_message.from_user.id
        unmute_user_by_id(message.chat.id, user_to_unmute_id)
    else:
        bot.send_message(message.chat.id, "⇜ يجب الرد على رسالة المستخدم الذي تريد فك كتمه.")



@bot.message_handler(func=lambda message: message.text.startswith('قول '))
def say(message):
    response_text = message.text[4:] 
    bot.reply_to(message, response_text)


@bot.message_handler(func=lambda message: 
    message.text.lower() in ['رابط مجموعة', 'رابط المجموعه', 'لنكي', 'لنكت', 'لنكت المجموعة', 'لنكي المجموعه'])
def send_group_link(message):

    if message.chat.type in ['group', 'supergroup']:

        if message.chat.username:
            group_link = f't.me/{message.chat.username}' 
            bot.reply_to(message, f'رابط المجموعه: {group_link}')
        else:
            bot.reply_to(message, 'لا يوجد رابط مباشر للمجموعة، تأكد من أن المجموعة تحتوي على اسم مستخدم.')
    else:
        bot.reply_to(message, 'هذا ليس مجموعة.')




@bot.message_handler(func=lambda message: 
    message.text.lower() in ['معلومات مجموعة', 'معلومات المجموعه', 'معلومات', 'معلومات المجموعة'])
def group_info(message):
    if message.chat.type in ['group', 'supergroup']:
        group_name = message.chat.title if message.chat.title else "لا يوجد اسم للمجموعة"
        
        member_count = bot.get_chat_members_count(message.chat.id)
        administrators = bot.get_chat_administrators(message.chat.id)
        admin_count = len(administrators)

        owner = None
        for admin in administrators:
            if admin.status == 'creator':
                owner = f"{admin.user.first_name} (@{admin.user.username})" if admin.user.username else admin.user.first_name
                break

        group_id = message.chat.id 

        response = f"معلومات المجموعه ✨\n\n"
        response += f"اسم المجموعه: {group_name}\n"
        response += f"عدد الاعضاء: {member_count}\n"
        response += f"عدد الادمن: {admin_count}\n"
        response += f"مالك المجموعه: {owner if owner else 'لا يوجد مالك محدد.'}\n"
        response += f"معرف المجموعه: {group_id}" 

        bot.reply_to(message, response)
    else:
        bot.reply_to(message, 'هذا ليس مجموعة.')





@bot.message_handler(func=lambda message: 
    message.text.lower() in ['صنع qr', 'اصنع qr', 'انشأ qr', 'انشا qr'])
def start_qr_creation(message):
    bot.reply_to(message, "ادخل النص الذي تريد إضافته في رمز QR:")
    user_requests[message.from_user.id] = True  # تعيين الحالة إلى True

@bot.message_handler(func=lambda message: message.from_user.id in user_requests and user_requests[message.from_user.id])
def create_qr_code(message):
    if message.from_user.id == bot.get_me().id:
        return

    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=10,
        border=4,
    )
    
    qr.add_data(message.text)
    qr.make(fit=True)

    img = qr.make_image(fill_color="black", back_color="white")

    img_bytes = BytesIO()
    img.save(img_bytes)
    img_bytes.seek(0)

    bot.send_photo(message.chat.id, img_bytes)

    user_requests.pop(message.from_user.id, None)




@bot.message_handler(func=lambda message: message.text.lower() in ['صورة', 'صوره', 'افتاري'])
def send_user_photo(message):
    # إرسال صورة المستخدم
    photos = bot.get_user_profile_photos(message.from_user.id)
    if photos.total_count > 0:
        bot.send_photo(message.chat.id, photos.photos[0][-1].file_id)
    else:
        bot.reply_to(message, "لا توجد صور للملف الشخصي.")



@bot.message_handler(commands=['avatar_by_user'])
def avatar_by_user(message):

    user_id = message.reply_to_message.from_user.id if message.reply_to_message else None
    if not user_id:

        try:
            user_id = int(message.text.split()[1])  
        except (IndexError, ValueError):
            bot.reply_to(message, "يرجى الرد على رسالة المستخدم أو إدخال معرفه بشكل صحيح.")
            return

    photos = bot.get_user_profile_photos(user_id)
    if photos.total_count > 0:
        bot.send_photo(message.chat.id, photos.photos[0][-1].file_id)
    else:
        bot.reply_to(message, "لا توجد صور للملف الشخصي لهذا المستخدم.")

@bot.message_handler(func=lambda message: message.text.lower() in ['عرض صورة', 'عرض صوره', 'افتار'])
def request_photo_reply(message):

    if message.reply_to_message:
        user = message.reply_to_message.from_user
        photos = bot.get_user_profile_photos(user.id)
        if photos.total_count > 0:
            bot.send_photo(message.chat.id, photos.photos[0][-1].file_id)
        else:
            bot.send_message(message.chat.id, "لا توجد صور متاحة لهذا المستخدم.")
    else:
        bot.reply_to(message, "يرجى الرد على رسالة شخص آخر لعرض صورته.")











def is_admin(chat_id, user_id):
    try:

        member = bot.get_chat_member(chat_id, user_id)
        return member.status in ['administrator', 'creator']
    except Exception as e:
        print(f"Error checking admin status: {e}")
        return False

@bot.message_handler(func=lambda message: message.text in ['تقييد', '/restrict', 'restrict', 'تقيد'])
def restrict_user(message):
    if not is_admin(message.chat.id, message.from_user.id):
        bot.reply_to(message, "أنت لست مشرفًا، لا يمكنك تنفيذ هذا الأمر.")
        return

    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
        

        if user_id == message.from_user.id:
            if is_admin(message.chat.id, user_id):
                bot.reply_to(message, "أنت أدمن، لا يمكنك تقييد نفسك!")
            else:
                bot.reply_to(message, "أنت مالك المجموعة، لا يمكنك تقييد نفسك!")
            return
        
        username = message.reply_to_message.from_user.username
        restricted_users.add(user_id)
        if username:
            bot.reply_to(message, f'تم تقييد @{username} 🔒')
        else:
            bot.reply_to(message, 'تم تقيد مستخدم غير معروف 🔒')
    else:
        bot.reply_to(message, "يرجى الرد على رسالة المستخدم الذي تريد تقييده.")

@bot.message_handler(func=lambda message: message.from_user.id in restricted_users)
def delete_restricted_messages(message):
    bot.delete_message(message.chat.id, message.message_id)

@bot.message_handler(func=lambda message: message.text in ['فك تقييد', '/unrestrict', 'unrestrict', 'فك تقيد'])
def unrestrict_user(message):
    if not is_admin(message.chat.id, message.from_user.id):
        bot.reply_to(message, "أنت لست مشرفًا، لا يمكنك تنفيذ هذا الأمر.")
        return

    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
        username = message.reply_to_message.from_user.username
        restricted_users.discard(user_id)
        if username:
            bot.reply_to(message, f'تم فك تقييد @{username} ✅')
        else:
            bot.reply_to(message, 'تم فك تقييد مستخدم غير معروف ✅')
    else:
        bot.reply_to(message, "يرجى الرد على رسالة المستخدم الذي تريد فك تقييده.")



@bot.message_handler(func=lambda message: message.text.lower() == 'كشف', content_types=['text'])
def reveal_user_info(message):
    if message.reply_to_message:
        replied_user = message.reply_to_message.from_user
        user_id = replied_user.id
        user_first_name = replied_user.first_name
        user_username = replied_user.username if replied_user.username else "لا يوجد"


        member_status = bot.get_chat_member(message.chat.id, user_id).status
        

        administrators = bot.get_chat_administrators(message.chat.id)
        owner = None
        for admin in administrators:
            if admin.status == 'creator':
                owner = f"{admin.user.first_name} (@{admin.user.username})" if admin.user.username else admin.user.first_name
                break

        response = f'معرف: {user_first_name} (@{user_username})\n'
        response += f'ايديه: {user_id}\n'
        

        if owner == f"{user_first_name} (@{user_username})" or owner == user_first_name:
            response += f'مالك المجموعة: {owner} (هذا هو المستخدم نفسه)\n'
        else:
            rank = 'أدمن' if member_status == 'administrator' else 'عضو'
            response += f'رتبته: {rank}\n'
            response += f'مالك المجموعة: {owner if owner else "لا يوجد مالك محدد."}'

        bot.reply_to(message, response)
    else:
        bot.reply_to(message, 'يرجى الرد على رسالة شخص آخر لاستخدام أمر كشف.')
        return

@bot.message_handler(func=lambda message: message.text.lower() == 'id')
def send_user_id(message):
    user_id = message.from_user.id  
    bot.reply_to(message, f'ايدي خاص بك: {user_id} 🆔')


@bot.message_handler(func=lambda message: message.text.lower() in ['معرفي', 'يوزري'])
def send_username(message):
    username = message.from_user.username
    if username:
        bot.reply_to(message, f'اهو يوزرك : @{username}')
    else:
        bot.reply_to(message, 'لا يوجد لديك يوزر محدد!')



###
@bot.message_handler(func=lambda message: message.reply_to_message and message.text.lower() in ['ابلاغ', 'ابلاغ عن رساله', 'ابلاغ مدير', 'بلاغ'])
def report(message):
    current_time = datetime.now()
    reports.append(current_time)


    reports[:] = [report_time for report_time in reports if current_time - report_time < timedelta(minutes=10)]


    report_message = f'تم ارسال بلاغك في الخاص للمطور.\n\nمعرفي الأدمن:\n'
    admins = bot.get_chat_administrators(message.chat.id)
    admin_list = "\n".join([f'@{admin.user.username}' for admin in admins if admin.user.username])
    report_message += admin_list

    if len(reports) > 3:
        bot.reply_to(message, 'تم تسجيل البلاغ ولكن لن تصل الرسالة للمدير، حيث تم إرسال أكثر من 3 بلاغات في أقل من 10 دقائق.')
    else:
        bot.reply_to(message, report_message)

        owner = next((admin for admin in admins if admin.status == 'creator'), None)
        group_link = f'https://t.me/c/{message.chat.id}' 
        message_link = f'https://t.me/c/{message.chat.id}/{message.reply_to_message.message_id}'  

        if owner:
            developer_message = (
                f'بلاغ من: @{message.from_user.username}\n'
                f'رابط الرسالة المتبلغ عنها: {message_link}\n'
                f'نص الرسالة المتبلغ عنها: "{message.reply_to_message.text}"\n'
                f'رابط المجموعة: {group_link}'
            )
            bot.send_message(owner.user.id, developer_message)  
        else:
            bot.reply_to(message, 'لم أتمكن من العثور على صاحب الجروب!')










@bot.message_handler(func=lambda message: message.text.startswith('شفر '))
def encrypt_message(message):
    original_message = message.text[4:].strip()
    message_bytes = original_message.encode('utf-8')
    base64_bytes = base64.b64encode(message_bytes)
    encrypted_message = base64_bytes.decode('utf-8')
    bot.reply_to(message, f"النص المشفر: {encrypted_message}")






@bot.message_handler(func=lambda message: message.text.startswith('فك تشفير '))
def decrypt_message(message):
    encrypted_message = message.text[6:].strip()
    try:
        missing_padding = len(encrypted_message) % 4
        if missing_padding != 0:
            encrypted_message += '=' * (4 - missing_padding)
        base64_bytes = encrypted_message.encode('utf-8')
        message_bytes = base64.b64decode(base64_bytes)
        original_message = message_bytes.decode('utf-8')
        bot.reply_to(message, f"النص المفكوك: {original_message}")
    except Exception:
        bot.reply_to(message, "حدث خطأ في فك تشفير النص.")




def is_group_admin(user_id, chat_id):
    chat_member = bot.get_chat_member(chat_id, user_id)
    return chat_member.status in ['administrator', 'creator']

@bot.message_handler(func=lambda message: message.text.lower() in ['اضافه رد', 'اضافة رد'])
def add_response(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if is_group_owner(user_id, chat_id) or is_group_admin(user_id, chat_id):
        bot.send_message(chat_id, "⇜ حلو، الحين ارسل الكلمة اللي تبيها:")
        bot.register_next_step_handler(message, process_keyword)
    else:
        bot.send_message(chat_id, "⇜ عزيزي، أنت لست أدمن الجروب لا يمكنك استخدام هذا الأمر.")

def process_keyword(message):
    chat_id = message.chat.id
    keyword = message.text

    bot.send_message(chat_id, "⇜ حلو، الحين ارسل جواب الرد:\n⇜ (نص، صورة، فيديو، إلخ)")
    bot.register_next_step_handler(message, process_response, keyword)

def process_response(message, keyword):
    chat_id = message.chat.id
    response = message.text


    if message.content_type == 'photo':

        file_id = message.photo[-1].file_id
        save_response(chat_id, keyword, file_id, 'photo')
    elif message.content_type == 'video':

        file_id = message.video.file_id
        save_response(chat_id, keyword, file_id, 'video')
    else:

        save_response(chat_id, keyword, response, 'text')

    bot.send_message(chat_id, "⇜ تم حفظ الرد بنجاح!")

def save_response(chat_id, keyword, response, response_type):
    if chat_id not in responses:
        responses[chat_id] = {}
    
    responses[chat_id][keyword] = (response, response_type) 

@bot.message_handler(func=lambda message: True)
def reply_to_keywords(message):
    chat_id = message.chat.id
    user_message = message.text.lower()

    if chat_id in responses and user_message in responses[chat_id]:
        response, response_type = responses[chat_id][user_message]
        if response_type == 'text':
            bot.send_message(chat_id, response)  
        elif response_type == 'photo':
            bot.send_photo(chat_id, response) 
        elif response_type == 'video':
            bot.send_video(chat_id, response)  
        return




@bot.message_handler(func=lambda message: message.text.lower() in ['تعيين رساله ترحيب', 'تعيين رسالة ترحيب', 'تعيين رساله', 'تعيين رسالة'])
def set_welcome_message(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if is_group_owner(user_id, chat_id): 
        markup = types.InlineKeyboardMarkup()
        main_welcome_button = types.InlineKeyboardButton("تعين رساله الترحيب الرئيسيه الخاصه بالبوت", callback_data='main_welcome')

        markup.add(main_welcome_button)
        bot.send_message(chat_id, "⇜ تعين رساله الترحيب ؟؟", reply_markup=markup)
    else:
        bot.send_message(chat_id, "⇜ عزيزي، أنت لست مالك الجروب لا يمكنك استخدام هذا الأمر.")

@bot.callback_query_handler(func=lambda call: call.data == 'main_welcome')
def set_main_welcome_message(call):
    chat_id = call.message.chat.id
    user_id = call.from_user.id

    if is_group_owner(user_id, chat_id):
        welcome_message = (
            "⇜ أهلا بيك عزيزي {name}\n"
            "⇜ يوزرك: @{username}\n"
            "⇜ بايو خاص بيك: {bio}\n"
            "⇜ ايدي: {id}\n\n"
            "⇜ نورت الجروب 🌟"
        )
        
        welcome_messages[chat_id] = welcome_message
        bot.edit_message_text("⇜ تم تعيين الرسالة الترحيبية الرئيسية بنجاح.", chat_id, call.message.message_id)
    else:
        bot.send_message(chat_id, "⇜ عزيزي، أنت لست أدمن الجروب لا يمكنك استخدام هذا الأمر.")

@bot.message_handler(func=lambda message: message.text.lower() in ['مسح رساله ترحيب', 'مسح ترحيب', 'ازاله رساله الترحيب', 'مسح الترحيب الانضمام', 'مسح رساله الترحيب'])
def delete_welcome_message(message):
    chat_id = message.chat.id
    if is_group_owner(message.from_user.id, chat_id):
        if chat_id in welcome_messages:
            del welcome_messages[chat_id]
            bot.send_message(chat_id, "⇜ تم حذف رساله الترحيب.")
        else:
            bot.send_message(chat_id, "⇜ لا توجد رسالة ترحيب تم تعيينها.")
    else:
        bot.send_message(chat_id, "⇜ عزيزي، أنت لست مالك الجروب لا يمكنك استخدام هذا الأمر.")

@bot.message_handler(content_types=['new_chat_members'])
def welcome_new_member(message):
    for new_member in message.new_chat_members:
        if message.chat.id in welcome_messages.keys():
            welcome_message = welcome_messages[message.chat.id]
            bio = new_member.bio if hasattr(new_member, 'bio') and new_member.bio else "لا يوجد بايو"
            personalized_message = welcome_message.format(
                name=new_member.first_name,
                username=new_member.username if new_member.username else "لا يوجد يوزر",
                bio=bio, 
                id=new_member.id
            )
            bot.send_message(message.chat.id, personalized_message)

            return


@bot.message_handler(func=lambda message: message.text.lower() in ['الوقت', 'الساعه', 'ساعة كام','وقت','ساعه كام','ساعة','ساعه'])
def send_time(message):
    current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")  
    bot.reply_to(message, f'الساعة: {current_time}')
    return


bot.infinity_polling()